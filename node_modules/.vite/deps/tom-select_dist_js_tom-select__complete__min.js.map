{
  "version": 3,
  "sources": ["../../tom-select/src/contrib/microevent.ts", "../../tom-select/node_modules/@orchidjs/unicode-variants/dist/esm/regex.js", "../../tom-select/node_modules/@orchidjs/unicode-variants/dist/esm/strings.js", "../../tom-select/node_modules/@orchidjs/unicode-variants/dist/esm/index.js", "../../tom-select/node_modules/@orchidjs/sifter/dist/esm/utils.js", "../../tom-select/node_modules/@orchidjs/sifter/dist/esm/sifter.js", "../../tom-select/node_modules/@orchidjs/sifter/lib/utils.ts", "../../tom-select/src/vanilla.ts", "../../tom-select/src/contrib/highlight.ts", "../../tom-select/src/constants.ts", "../../tom-select/src/defaults.ts", "../../tom-select/src/utils.ts", "../../tom-select/src/getSettings.ts", "../../tom-select/src/tom-select.ts", "../../tom-select/src/contrib/microplugin.ts", "../../tom-select/src/tom-select.complete.ts", "../../tom-select/src/plugins/change_listener/plugin.ts", "../../tom-select/src/plugins/checkbox_options/plugin.ts", "../../tom-select/src/plugins/clear_button/plugin.ts", "../../tom-select/src/plugins/drag_drop/plugin.ts", "../../tom-select/src/plugins/dropdown_header/plugin.ts", "../../tom-select/src/plugins/caret_position/plugin.ts", "../../tom-select/src/plugins/dropdown_input/plugin.ts", "../../tom-select/src/plugins/input_autogrow/plugin.ts", "../../tom-select/src/plugins/no_backspace_delete/plugin.ts", "../../tom-select/src/plugins/no_active_items/plugin.ts", "../../tom-select/src/plugins/optgroup_columns/plugin.ts", "../../tom-select/src/plugins/remove_button/plugin.ts", "../../tom-select/src/plugins/restore_on_backspace/plugin.ts", "../../tom-select/src/plugins/virtual_scroll/plugin.ts"],
  "sourcesContent": ["/**\n * MicroEvent - to make any js object an event emitter\n *\n * - pure javascript - server compatible, browser compatible\n * - dont rely on the browser doms\n * - super simple - you get it immediatly, no mistery, no magic involved\n *\n * @author Jerome Etienne (https://github.com/jeromeetienne)\n */\n\ntype TCallback = (...args:any) => any;\n\n/**\n * Execute callback for each event in space separated list of event names\n *\n */\nfunction forEvents(events:string,callback:(event:string)=>any){\n\tevents.split(/\\s+/).forEach((event) =>{\n\t\tcallback(event);\n\t});\n}\n\nexport default class MicroEvent{\n\n\tpublic _events: {[key:string]:TCallback[]};\n\n\tconstructor(){\n\t\tthis._events = {};\n\t}\n\n\ton(events:string, fct:TCallback){\n\t\tforEvents(events,(event) => {\n\t\t\tconst event_array = this._events[event] || [];\n\t\t\tevent_array.push(fct);\n\t\t\tthis._events[event] = event_array;\n\t\t});\n\t}\n\n\toff(events:string, fct:TCallback){\n\t\tvar n = arguments.length;\n\t\tif( n === 0 ){\n\t\t\tthis._events = {};\n\t\t\treturn;\n\t\t}\n\n\t\tforEvents(events,(event) => {\n\n\t\t\tif (n === 1){\n\t\t\t\tdelete this._events[event];\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tconst event_array = this._events[event];\n\t\t\tif( event_array === undefined ) return;\n\n\t\t\tevent_array.splice(event_array.indexOf(fct), 1);\n\t\t\tthis._events[event] = event_array;\n\t\t});\n\t}\n\n\ttrigger(events:string, ...args:any){\n\t\tvar self = this;\n\n\t\tforEvents(events,(event) => {\n\t\t\tconst event_array = self._events[event];\n\t\t\tif( event_array === undefined ) return;\n\t\t\tevent_array.forEach(fct => {\n\t\t\t\tfct.apply(self, args );\n\t\t\t});\n\n\t\t});\n\t}\n};\n", "/*! @orchidjs/unicode-variants | https://github.com/orchidjs/unicode-variants | Apache License (v2) */\n/**\n * Convert array of strings to a regular expression\n *\tex ['ab','a'] => (?:ab|a)\n * \tex ['a','b'] => [ab]\n * @param {string[]} chars\n * @return {string}\n */\nconst arrayToPattern = chars => {\n  chars = chars.filter(Boolean);\n\n  if (chars.length < 2) {\n    return chars[0] || '';\n  }\n\n  return maxValueLength(chars) == 1 ? '[' + chars.join('') + ']' : '(?:' + chars.join('|') + ')';\n};\n/**\n * @param {string[]} array\n * @return {string}\n */\n\nconst sequencePattern = array => {\n  if (!hasDuplicates(array)) {\n    return array.join('');\n  }\n\n  let pattern = '';\n  let prev_char_count = 0;\n\n  const prev_pattern = () => {\n    if (prev_char_count > 1) {\n      pattern += '{' + prev_char_count + '}';\n    }\n  };\n\n  array.forEach((char, i) => {\n    if (char === array[i - 1]) {\n      prev_char_count++;\n      return;\n    }\n\n    prev_pattern();\n    pattern += char;\n    prev_char_count = 1;\n  });\n  prev_pattern();\n  return pattern;\n};\n/**\n * Convert array of strings to a regular expression\n *\tex ['ab','a'] => (?:ab|a)\n * \tex ['a','b'] => [ab]\n * @param {Set<string>} chars\n * @return {string}\n */\n\nconst setToPattern = chars => {\n  let array = toArray(chars);\n  return arrayToPattern(array);\n};\n/**\n *\n * https://stackoverflow.com/questions/7376598/in-javascript-how-do-i-check-if-an-array-has-duplicate-values\n * @param {any[]} array\n */\n\nconst hasDuplicates = array => {\n  return new Set(array).size !== array.length;\n};\n/**\n * https://stackoverflow.com/questions/63006601/why-does-u-throw-an-invalid-escape-error\n * @param {string} str\n * @return {string}\n */\n\nconst escape_regex = str => {\n  return (str + '').replace(/([\\$\\(\\)\\*\\+\\.\\?\\[\\]\\^\\{\\|\\}\\\\])/gu, '\\\\$1');\n};\n/**\n * Return the max length of array values\n * @param {string[]} array\n *\n */\n\nconst maxValueLength = array => {\n  return array.reduce((longest, value) => Math.max(longest, unicodeLength(value)), 0);\n};\n/**\n * @param {string} str\n */\n\nconst unicodeLength = str => {\n  return toArray(str).length;\n};\n/**\n * @param {any} p\n * @return {any[]}\n */\n\nconst toArray = p => Array.from(p);\n\nexport { arrayToPattern, escape_regex, hasDuplicates, maxValueLength, sequencePattern, setToPattern, toArray, unicodeLength };\n//# sourceMappingURL=regex.js.map\n", "/*! @orchidjs/unicode-variants | https://github.com/orchidjs/unicode-variants | Apache License (v2) */\n/**\n * Get all possible combinations of substrings that add up to the given string\n * https://stackoverflow.com/questions/30169587/find-all-the-combination-of-substrings-that-add-up-to-the-given-string\n * @param {string} input\n * @return {string[][]}\n */\nconst allSubstrings = input => {\n  if (input.length === 1) return [[input]];\n  /** @type {string[][]} */\n\n  let result = [];\n  const start = input.substring(1);\n  const suba = allSubstrings(start);\n  suba.forEach(function (subresult) {\n    let tmp = subresult.slice(0);\n    tmp[0] = input.charAt(0) + tmp[0];\n    result.push(tmp);\n    tmp = subresult.slice(0);\n    tmp.unshift(input.charAt(0));\n    result.push(tmp);\n  });\n  return result;\n};\n\nexport { allSubstrings };\n//# sourceMappingURL=strings.js.map\n", "/*! @orchidjs/unicode-variants | https://github.com/orchidjs/unicode-variants | Apache License (v2) */\nimport { toArray, setToPattern, escape_regex, arrayToPattern, sequencePattern } from './regex.js';\nexport { escape_regex } from './regex.js';\nimport { allSubstrings } from './strings.js';\n\n/**\n * @typedef {{[key:string]:string}} TUnicodeMap\n * @typedef {{[key:string]:Set<string>}} TUnicodeSets\n * @typedef {[[number,number]]} TCodePoints\n * @typedef {{folded:string,composed:string,code_point:number}} TCodePointObj\n * @typedef {{start:number,end:number,length:number,substr:string}} TSequencePart\n */\n/** @type {TCodePoints} */\n\nconst code_points = [[0, 65535]];\nconst accent_pat = '[\\u0300-\\u036F\\u{b7}\\u{2be}\\u{2bc}]';\n/** @type {TUnicodeMap} */\n\nlet unicode_map;\n/** @type {RegExp} */\n\nlet multi_char_reg;\nconst max_char_length = 3;\n/** @type {TUnicodeMap} */\n\nconst latin_convert = {};\n/** @type {TUnicodeMap} */\n\nconst latin_condensed = {\n  '/': '⁄∕',\n  '0': '߀',\n  \"a\": \"ⱥɐɑ\",\n  \"aa\": \"ꜳ\",\n  \"ae\": \"æǽǣ\",\n  \"ao\": \"ꜵ\",\n  \"au\": \"ꜷ\",\n  \"av\": \"ꜹꜻ\",\n  \"ay\": \"ꜽ\",\n  \"b\": \"ƀɓƃ\",\n  \"c\": \"ꜿƈȼↄ\",\n  \"d\": \"đɗɖᴅƌꮷԁɦ\",\n  \"e\": \"ɛǝᴇɇ\",\n  \"f\": \"ꝼƒ\",\n  \"g\": \"ǥɠꞡᵹꝿɢ\",\n  \"h\": \"ħⱨⱶɥ\",\n  \"i\": \"ɨı\",\n  \"j\": \"ɉȷ\",\n  \"k\": \"ƙⱪꝁꝃꝅꞣ\",\n  \"l\": \"łƚɫⱡꝉꝇꞁɭ\",\n  \"m\": \"ɱɯϻ\",\n  \"n\": \"ꞥƞɲꞑᴎлԉ\",\n  \"o\": \"øǿɔɵꝋꝍᴑ\",\n  \"oe\": \"œ\",\n  \"oi\": \"ƣ\",\n  \"oo\": \"ꝏ\",\n  \"ou\": \"ȣ\",\n  \"p\": \"ƥᵽꝑꝓꝕρ\",\n  \"q\": \"ꝗꝙɋ\",\n  \"r\": \"ɍɽꝛꞧꞃ\",\n  \"s\": \"ßȿꞩꞅʂ\",\n  \"t\": \"ŧƭʈⱦꞇ\",\n  \"th\": \"þ\",\n  \"tz\": \"ꜩ\",\n  \"u\": \"ʉ\",\n  \"v\": \"ʋꝟʌ\",\n  \"vy\": \"ꝡ\",\n  \"w\": \"ⱳ\",\n  \"y\": \"ƴɏỿ\",\n  \"z\": \"ƶȥɀⱬꝣ\",\n  \"hv\": \"ƕ\"\n};\n\nfor (let latin in latin_condensed) {\n  let unicode = latin_condensed[latin] || '';\n\n  for (let i = 0; i < unicode.length; i++) {\n    let char = unicode.substring(i, i + 1);\n    latin_convert[char] = latin;\n  }\n}\n\nconst convert_pat = new RegExp(Object.keys(latin_convert).join('|') + '|' + accent_pat, 'gu');\n/**\n * Initialize the unicode_map from the give code point ranges\n *\n * @param {TCodePoints=} _code_points\n */\n\nconst initialize = _code_points => {\n  if (unicode_map !== undefined) return;\n  unicode_map = generateMap(_code_points || code_points);\n};\n/**\n * Helper method for normalize a string\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize\n * @param {string} str\n * @param {string} form\n */\n\nconst normalize = (str, form = 'NFKD') => str.normalize(form);\n/**\n * Remove accents without reordering string\n * calling str.normalize('NFKD') on \\u{594}\\u{595}\\u{596} becomes \\u{596}\\u{594}\\u{595}\n * via https://github.com/krisk/Fuse/issues/133#issuecomment-318692703\n * @param {string} str\n * @return {string}\n */\n\nconst asciifold = str => {\n  return toArray(str).reduce(\n  /**\n   * @param {string} result\n   * @param {string} char\n   */\n  (result, char) => {\n    return result + _asciifold(char);\n  }, '');\n};\n/**\n * @param {string} str\n * @return {string}\n */\n\nconst _asciifold = str => {\n  str = normalize(str).toLowerCase().replace(convert_pat, (\n  /** @type {string} */\n  char) => {\n    return latin_convert[char] || '';\n  }); //return str;\n\n  return normalize(str, 'NFC');\n};\n/**\n * Generate a list of unicode variants from the list of code points\n * @param {TCodePoints} code_points\n * @yield {TCodePointObj}\n */\n\nfunction* generator(code_points) {\n  for (const [code_point_min, code_point_max] of code_points) {\n    for (let i = code_point_min; i <= code_point_max; i++) {\n      let composed = String.fromCharCode(i);\n      let folded = asciifold(composed);\n\n      if (folded == composed.toLowerCase()) {\n        continue;\n      } // skip when folded is a string longer than 3 characters long\n      // bc the resulting regex patterns will be long\n      // eg:\n      // folded صلى الله عليه وسلم length 18 code point 65018\n      // folded جل جلاله length 8 code point 65019\n\n\n      if (folded.length > max_char_length) {\n        continue;\n      }\n\n      if (folded.length == 0) {\n        continue;\n      }\n\n      yield {\n        folded: folded,\n        composed: composed,\n        code_point: i\n      };\n    }\n  }\n}\n/**\n * Generate a unicode map from the list of code points\n * @param {TCodePoints} code_points\n * @return {TUnicodeSets}\n */\n\nconst generateSets = code_points => {\n  /** @type {{[key:string]:Set<string>}} */\n  const unicode_sets = {};\n  /**\n   * @param {string} folded\n   * @param {string} to_add\n   */\n\n  const addMatching = (folded, to_add) => {\n    /** @type {Set<string>} */\n    const folded_set = unicode_sets[folded] || new Set();\n    const patt = new RegExp('^' + setToPattern(folded_set) + '$', 'iu');\n\n    if (to_add.match(patt)) {\n      return;\n    }\n\n    folded_set.add(escape_regex(to_add));\n    unicode_sets[folded] = folded_set;\n  };\n\n  for (let value of generator(code_points)) {\n    addMatching(value.folded, value.folded);\n    addMatching(value.folded, value.composed);\n  }\n\n  return unicode_sets;\n};\n/**\n * Generate a unicode map from the list of code points\n * ae => (?:(?:ae|Æ|Ǽ|Ǣ)|(?:A|Ⓐ|Ａ...)(?:E|ɛ|Ⓔ...))\n *\n * @param {TCodePoints} code_points\n * @return {TUnicodeMap}\n */\n\nconst generateMap = code_points => {\n  /** @type {TUnicodeSets} */\n  const unicode_sets = generateSets(code_points);\n  /** @type {TUnicodeMap} */\n\n  const unicode_map = {};\n  /** @type {string[]} */\n\n  let multi_char = [];\n\n  for (let folded in unicode_sets) {\n    let set = unicode_sets[folded];\n\n    if (set) {\n      unicode_map[folded] = setToPattern(set);\n    }\n\n    if (folded.length > 1) {\n      multi_char.push(escape_regex(folded));\n    }\n  }\n\n  multi_char.sort((a, b) => b.length - a.length);\n  const multi_char_patt = arrayToPattern(multi_char);\n  multi_char_reg = new RegExp('^' + multi_char_patt, 'u');\n  return unicode_map;\n};\n/**\n * Map each element of an array from it's folded value to all possible unicode matches\n * @param {string[]} strings\n * @param {number} min_replacement\n * @return {string}\n */\n\nconst mapSequence = (strings, min_replacement = 1) => {\n  let chars_replaced = 0;\n  strings = strings.map(str => {\n    if (unicode_map[str]) {\n      chars_replaced += str.length;\n    }\n\n    return unicode_map[str] || str;\n  });\n\n  if (chars_replaced >= min_replacement) {\n    return sequencePattern(strings);\n  }\n\n  return '';\n};\n/**\n * Convert a short string and split it into all possible patterns\n * Keep a pattern only if min_replacement is met\n *\n * 'abc'\n * \t\t=> [['abc'],['ab','c'],['a','bc'],['a','b','c']]\n *\t\t=> ['abc-pattern','ab-c-pattern'...]\n *\n *\n * @param {string} str\n * @param {number} min_replacement\n * @return {string}\n */\n\nconst substringsToPattern = (str, min_replacement = 1) => {\n  min_replacement = Math.max(min_replacement, str.length - 1);\n  return arrayToPattern(allSubstrings(str).map(sub_pat => {\n    return mapSequence(sub_pat, min_replacement);\n  }));\n};\n/**\n * Convert an array of sequences into a pattern\n * [{start:0,end:3,length:3,substr:'iii'}...] => (?:iii...)\n *\n * @param {Sequence[]} sequences\n * @param {boolean} all\n */\n\nconst sequencesToPattern = (sequences, all = true) => {\n  let min_replacement = sequences.length > 1 ? 1 : 0;\n  return arrayToPattern(sequences.map(sequence => {\n    let seq = [];\n    const len = all ? sequence.length() : sequence.length() - 1;\n\n    for (let j = 0; j < len; j++) {\n      seq.push(substringsToPattern(sequence.substrs[j] || '', min_replacement));\n    }\n\n    return sequencePattern(seq);\n  }));\n};\n/**\n * Return true if the sequence is already in the sequences\n * @param {Sequence} needle_seq\n * @param {Sequence[]} sequences\n */\n\n\nconst inSequences = (needle_seq, sequences) => {\n  for (const seq of sequences) {\n    if (seq.start != needle_seq.start || seq.end != needle_seq.end) {\n      continue;\n    }\n\n    if (seq.substrs.join('') !== needle_seq.substrs.join('')) {\n      continue;\n    }\n\n    let needle_parts = needle_seq.parts;\n    /**\n     * @param {TSequencePart} part\n     */\n\n    const filter = part => {\n      for (const needle_part of needle_parts) {\n        if (needle_part.start === part.start && needle_part.substr === part.substr) {\n          return false;\n        }\n\n        if (part.length == 1 || needle_part.length == 1) {\n          continue;\n        } // check for overlapping parts\n        // a = ['::=','==']\n        // b = ['::','===']\n        // a = ['r','sm']\n        // b = ['rs','m']\n\n\n        if (part.start < needle_part.start && part.end > needle_part.start) {\n          return true;\n        }\n\n        if (needle_part.start < part.start && needle_part.end > part.start) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    let filtered = seq.parts.filter(filter);\n\n    if (filtered.length > 0) {\n      continue;\n    }\n\n    return true;\n  }\n\n  return false;\n};\n\nclass Sequence {\n  constructor() {\n    /** @type {TSequencePart[]} */\n    this.parts = [];\n    /** @type {string[]} */\n\n    this.substrs = [];\n    this.start = 0;\n    this.end = 0;\n  }\n  /**\n   * @param {TSequencePart|undefined} part\n   */\n\n\n  add(part) {\n    if (part) {\n      this.parts.push(part);\n      this.substrs.push(part.substr);\n      this.start = Math.min(part.start, this.start);\n      this.end = Math.max(part.end, this.end);\n    }\n  }\n\n  last() {\n    return this.parts[this.parts.length - 1];\n  }\n\n  length() {\n    return this.parts.length;\n  }\n  /**\n   * @param {number} position\n   * @param {TSequencePart} last_piece\n   */\n\n\n  clone(position, last_piece) {\n    let clone = new Sequence();\n    let parts = JSON.parse(JSON.stringify(this.parts));\n    let last_part = parts.pop();\n\n    for (const part of parts) {\n      clone.add(part);\n    }\n\n    let last_substr = last_piece.substr.substring(0, position - last_part.start);\n    let clone_last_len = last_substr.length;\n    clone.add({\n      start: last_part.start,\n      end: last_part.start + clone_last_len,\n      length: clone_last_len,\n      substr: last_substr\n    });\n    return clone;\n  }\n\n}\n/**\n * Expand a regular expression pattern to include unicode variants\n * \teg /a/ becomes /aⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐɑAⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ/\n *\n * Issue:\n *  ﺊﺋ [ 'ﺊ = \\\\u{fe8a}', 'ﺋ = \\\\u{fe8b}' ]\n *\tbecomes:\tئئ [ 'ي = \\\\u{64a}', 'ٔ = \\\\u{654}', 'ي = \\\\u{64a}', 'ٔ = \\\\u{654}' ]\n *\n *\tİĲ = IIJ = ⅡJ\n *\n * \t1/2/4\n *\n * @param {string} str\n * @return {string|undefined}\n */\n\n\nconst getPattern = str => {\n  initialize();\n  str = asciifold(str);\n  let pattern = '';\n  let sequences = [new Sequence()];\n\n  for (let i = 0; i < str.length; i++) {\n    let substr = str.substring(i);\n    let match = substr.match(multi_char_reg);\n    const char = str.substring(i, i + 1);\n    const match_str = match ? match[0] : null; // loop through sequences\n    // add either the char or multi_match\n\n    let overlapping = [];\n    let added_types = new Set();\n\n    for (const sequence of sequences) {\n      const last_piece = sequence.last();\n\n      if (!last_piece || last_piece.length == 1 || last_piece.end <= i) {\n        // if we have a multi match\n        if (match_str) {\n          const len = match_str.length;\n          sequence.add({\n            start: i,\n            end: i + len,\n            length: len,\n            substr: match_str\n          });\n          added_types.add('1');\n        } else {\n          sequence.add({\n            start: i,\n            end: i + 1,\n            length: 1,\n            substr: char\n          });\n          added_types.add('2');\n        }\n      } else if (match_str) {\n        let clone = sequence.clone(i, last_piece);\n        const len = match_str.length;\n        clone.add({\n          start: i,\n          end: i + len,\n          length: len,\n          substr: match_str\n        });\n        overlapping.push(clone);\n      } else {\n        // don't add char\n        // adding would create invalid patterns: 234 => [2,34,4]\n        added_types.add('3');\n      }\n    } // if we have overlapping\n\n\n    if (overlapping.length > 0) {\n      // ['ii','iii'] before ['i','i','iii']\n      overlapping = overlapping.sort((a, b) => {\n        return a.length() - b.length();\n      });\n\n      for (let clone of overlapping) {\n        // don't add if we already have an equivalent sequence\n        if (inSequences(clone, sequences)) {\n          continue;\n        }\n\n        sequences.push(clone);\n      }\n\n      continue;\n    } // if we haven't done anything unique\n    // clean up the patterns\n    // helps keep patterns smaller\n    // if str = 'r₨㎧aarss', pattern will be 446 instead of 655\n\n\n    if (i > 0 && added_types.size == 1 && !added_types.has('3')) {\n      pattern += sequencesToPattern(sequences, false);\n      let new_seq = new Sequence();\n      const old_seq = sequences[0];\n\n      if (old_seq) {\n        new_seq.add(old_seq.last());\n      }\n\n      sequences = [new_seq];\n    }\n  }\n\n  pattern += sequencesToPattern(sequences, true);\n  return pattern;\n};\n\nexport { _asciifold, asciifold, code_points, generateMap, generateSets, generator, getPattern, initialize, mapSequence, normalize, substringsToPattern, unicode_map };\n//# sourceMappingURL=index.js.map\n", "/*! sifter.js | https://github.com/orchidjs/sifter.js | Apache License (v2) */\nimport { asciifold } from '@orchidjs/unicode-variants';\n\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\nconst getAttr = (obj, name) => {\n  if (!obj) return;\n  return obj[name];\n};\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\n\nconst getAttrNesting = (obj, name) => {\n  if (!obj) return;\n  var part,\n      names = name.split(\".\");\n\n  while ((part = names.shift()) && (obj = obj[part]));\n\n  return obj;\n};\n/**\n * Calculates how close of a match the\n * given value is against a search token.\n *\n */\n\nconst scoreValue = (value, token, weight) => {\n  var score, pos;\n  if (!value) return 0;\n  value = value + '';\n  if (token.regex == null) return 0;\n  pos = value.search(token.regex);\n  if (pos === -1) return 0;\n  score = token.string.length / value.length;\n  if (pos === 0) score += 0.5;\n  return score * weight;\n};\n/**\n * Cast object property to an array if it exists and has a value\n *\n */\n\nconst propToArray = (obj, key) => {\n  var value = obj[key];\n  if (typeof value == 'function') return value;\n\n  if (value && !Array.isArray(value)) {\n    obj[key] = [value];\n  }\n};\n/**\n * Iterates over arrays and hashes.\n *\n * ```\n * iterate(this.items, function(item, id) {\n *    // invoked for each item\n * });\n * ```\n *\n */\n\nconst iterate = (object, callback) => {\n  if (Array.isArray(object)) {\n    object.forEach(callback);\n  } else {\n    for (var key in object) {\n      if (object.hasOwnProperty(key)) {\n        callback(object[key], key);\n      }\n    }\n  }\n};\nconst cmp = (a, b) => {\n  if (typeof a === 'number' && typeof b === 'number') {\n    return a > b ? 1 : a < b ? -1 : 0;\n  }\n\n  a = asciifold(a + '').toLowerCase();\n  b = asciifold(b + '').toLowerCase();\n  if (a > b) return 1;\n  if (b > a) return -1;\n  return 0;\n};\n\nexport { cmp, getAttr, getAttrNesting, iterate, propToArray, scoreValue };\n//# sourceMappingURL=utils.js.map\n", "/*! sifter.js | https://github.com/orchidjs/sifter.js | Apache License (v2) */\nimport { iterate, cmp, propToArray, getAttrNesting, getAttr, scoreValue } from './utils.js';\nexport { cmp, getAttr, getAttrNesting, iterate, propToArray, scoreValue } from './utils.js';\nimport { escape_regex, getPattern } from '@orchidjs/unicode-variants';\nexport { getPattern } from '@orchidjs/unicode-variants';\n\n/**\n * sifter.js\n * Copyright (c) 2013–2020 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\nclass Sifter {\n  // []|{};\n\n  /**\n   * Textually searches arrays and hashes of objects\n   * by property (or multiple properties). Designed\n   * specifically for autocomplete.\n   *\n   */\n  constructor(items, settings) {\n    this.items = void 0;\n    this.settings = void 0;\n    this.items = items;\n    this.settings = settings || {\n      diacritics: true\n    };\n  }\n\n  /**\n   * Splits a search string into an array of individual\n   * regexps to be used to match results.\n   *\n   */\n  tokenize(query, respect_word_boundaries, weights) {\n    if (!query || !query.length) return [];\n    const tokens = [];\n    const words = query.split(/\\s+/);\n    var field_regex;\n\n    if (weights) {\n      field_regex = new RegExp('^(' + Object.keys(weights).map(escape_regex).join('|') + ')\\:(.*)$');\n    }\n\n    words.forEach(word => {\n      let field_match;\n      let field = null;\n      let regex = null; // look for \"field:query\" tokens\n\n      if (field_regex && (field_match = word.match(field_regex))) {\n        field = field_match[1];\n        word = field_match[2];\n      }\n\n      if (word.length > 0) {\n        if (this.settings.diacritics) {\n          regex = getPattern(word) || null;\n        } else {\n          regex = escape_regex(word);\n        }\n\n        if (regex && respect_word_boundaries) regex = \"\\\\b\" + regex;\n      }\n\n      tokens.push({\n        string: word,\n        regex: regex ? new RegExp(regex, 'iu') : null,\n        field: field\n      });\n    });\n    return tokens;\n  }\n\n  /**\n   * Returns a function to be used to score individual results.\n   *\n   * Good matches will have a higher score than poor matches.\n   * If an item is not a match, 0 will be returned by the function.\n   *\n   * @returns {T.ScoreFn}\n   */\n  getScoreFunction(query, options) {\n    var search = this.prepareSearch(query, options);\n    return this._getScoreFunction(search);\n  }\n  /**\n   * @returns {T.ScoreFn}\n   *\n   */\n\n\n  _getScoreFunction(search) {\n    const tokens = search.tokens,\n          token_count = tokens.length;\n\n    if (!token_count) {\n      return function () {\n        return 0;\n      };\n    }\n\n    const fields = search.options.fields,\n          weights = search.weights,\n          field_count = fields.length,\n          getAttrFn = search.getAttrFn;\n\n    if (!field_count) {\n      return function () {\n        return 1;\n      };\n    }\n    /**\n     * Calculates the score of an object\n     * against the search query.\n     *\n     */\n\n\n    const scoreObject = function () {\n      if (field_count === 1) {\n        return function (token, data) {\n          const field = fields[0].field;\n          return scoreValue(getAttrFn(data, field), token, weights[field] || 1);\n        };\n      }\n\n      return function (token, data) {\n        var sum = 0; // is the token specific to a field?\n\n        if (token.field) {\n          const value = getAttrFn(data, token.field);\n\n          if (!token.regex && value) {\n            sum += 1 / field_count;\n          } else {\n            sum += scoreValue(value, token, 1);\n          }\n        } else {\n          iterate(weights, (weight, field) => {\n            sum += scoreValue(getAttrFn(data, field), token, weight);\n          });\n        }\n\n        return sum / field_count;\n      };\n    }();\n\n    if (token_count === 1) {\n      return function (data) {\n        return scoreObject(tokens[0], data);\n      };\n    }\n\n    if (search.options.conjunction === 'and') {\n      return function (data) {\n        var score,\n            sum = 0;\n\n        for (let token of tokens) {\n          score = scoreObject(token, data);\n          if (score <= 0) return 0;\n          sum += score;\n        }\n\n        return sum / token_count;\n      };\n    } else {\n      return function (data) {\n        var sum = 0;\n        iterate(tokens, token => {\n          sum += scoreObject(token, data);\n        });\n        return sum / token_count;\n      };\n    }\n  }\n\n  /**\n   * Returns a function that can be used to compare two\n   * results, for sorting purposes. If no sorting should\n   * be performed, `null` will be returned.\n   *\n   * @return function(a,b)\n   */\n  getSortFunction(query, options) {\n    var search = this.prepareSearch(query, options);\n    return this._getSortFunction(search);\n  }\n\n  _getSortFunction(search) {\n    var implicit_score,\n        sort_flds = [];\n    const self = this,\n          options = search.options,\n          sort = !search.query && options.sort_empty ? options.sort_empty : options.sort;\n\n    if (typeof sort == 'function') {\n      return sort.bind(this);\n    }\n    /**\n     * Fetches the specified sort field value\n     * from a search result item.\n     *\n     */\n\n\n    const get_field = function get_field(name, result) {\n      if (name === '$score') return result.score;\n      return search.getAttrFn(self.items[result.id], name);\n    }; // parse options\n\n\n    if (sort) {\n      for (let s of sort) {\n        if (search.query || s.field !== '$score') {\n          sort_flds.push(s);\n        }\n      }\n    } // the \"$score\" field is implied to be the primary\n    // sort field, unless it's manually specified\n\n\n    if (search.query) {\n      implicit_score = true;\n\n      for (let fld of sort_flds) {\n        if (fld.field === '$score') {\n          implicit_score = false;\n          break;\n        }\n      }\n\n      if (implicit_score) {\n        sort_flds.unshift({\n          field: '$score',\n          direction: 'desc'\n        });\n      } // without a search.query, all items will have the same score\n\n    } else {\n      sort_flds = sort_flds.filter(fld => fld.field !== '$score');\n    } // build function\n\n\n    const sort_flds_count = sort_flds.length;\n\n    if (!sort_flds_count) {\n      return null;\n    }\n\n    return function (a, b) {\n      var result, field;\n\n      for (let sort_fld of sort_flds) {\n        field = sort_fld.field;\n        let multiplier = sort_fld.direction === 'desc' ? -1 : 1;\n        result = multiplier * cmp(get_field(field, a), get_field(field, b));\n        if (result) return result;\n      }\n\n      return 0;\n    };\n  }\n\n  /**\n   * Parses a search query and returns an object\n   * with tokens and fields ready to be populated\n   * with results.\n   *\n   */\n  prepareSearch(query, optsUser) {\n    const weights = {};\n    var options = Object.assign({}, optsUser);\n    propToArray(options, 'sort');\n    propToArray(options, 'sort_empty'); // convert fields to new format\n\n    if (options.fields) {\n      propToArray(options, 'fields');\n      const fields = [];\n      options.fields.forEach(field => {\n        if (typeof field == 'string') {\n          field = {\n            field: field,\n            weight: 1\n          };\n        }\n\n        fields.push(field);\n        weights[field.field] = 'weight' in field ? field.weight : 1;\n      });\n      options.fields = fields;\n    }\n\n    return {\n      options: options,\n      query: query.toLowerCase().trim(),\n      tokens: this.tokenize(query, options.respect_word_boundaries, weights),\n      total: 0,\n      items: [],\n      weights: weights,\n      getAttrFn: options.nesting ? getAttrNesting : getAttr\n    };\n  }\n\n  /**\n   * Searches through all items and returns a sorted array of matches.\n   *\n   */\n  search(query, options) {\n    var self = this,\n        score,\n        search;\n    search = this.prepareSearch(query, options);\n    options = search.options;\n    query = search.query; // generate result scoring function\n\n    const fn_score = options.score || self._getScoreFunction(search); // perform search and sort\n\n\n    if (query.length) {\n      iterate(self.items, (item, id) => {\n        score = fn_score(item);\n\n        if (options.filter === false || score > 0) {\n          search.items.push({\n            'score': score,\n            'id': id\n          });\n        }\n      });\n    } else {\n      iterate(self.items, (_, id) => {\n        search.items.push({\n          'score': 1,\n          'id': id\n        });\n      });\n    }\n\n    const fn_sort = self._getSortFunction(search);\n\n    if (fn_sort) search.items.sort(fn_sort); // apply limits\n\n    search.total = search.items.length;\n\n    if (typeof options.limit === 'number') {\n      search.items = search.items.slice(0, options.limit);\n    }\n\n    return search;\n  }\n\n}\n\nexport { Sifter };\n//# sourceMappingURL=sifter.js.map\n", "\nimport { asciifold } from '@orchidjs/unicode-variants';\nimport * as T from './types';\n\n\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\nexport const getAttr = (obj:{[key:string]:any}, name:string ) => {\n    if (!obj ) return;\n    return obj[name];\n};\n\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\nexport const getAttrNesting = (obj:{[key:string]:any}, name:string ) => {\n    if (!obj ) return;\n    var part, names = name.split(\".\");\n\twhile( (part = names.shift()) && (obj = obj[part]));\n    return obj;\n};\n\n/**\n * Calculates how close of a match the\n * given value is against a search token.\n *\n */\nexport const scoreValue = (value:string, token:T.Token, weight:number ):number => {\n\tvar score, pos;\n\n\tif (!value) return 0;\n\n\tvalue = value + '';\n\tif( token.regex == null ) return 0;\n\tpos = value.search(token.regex);\n\tif (pos === -1) return 0;\n\n\tscore = token.string.length / value.length;\n\tif (pos === 0) score += 0.5;\n\n\treturn score * weight;\n};\n\n\n/**\n * Cast object property to an array if it exists and has a value\n *\n */\nexport const propToArray = (obj:{[key:string]:any}, key:string) => {\n\tvar value = obj[key];\n\n\tif( typeof value == 'function' ) return value;\n\n\tif( value && !Array.isArray(value) ){\n\t\tobj[key] = [value];\n\t}\n}\n\n\n/**\n * Iterates over arrays and hashes.\n *\n * ```\n * iterate(this.items, function(item, id) {\n *    // invoked for each item\n * });\n * ```\n *\n */\nexport const iterate = (object:[]|{[key:string]:any}, callback:(value:any,key:any)=>any) => {\n\n\tif ( Array.isArray(object)) {\n\t\tobject.forEach(callback);\n\n\t}else{\n\n\t\tfor (var key in object) {\n\t\t\tif (object.hasOwnProperty(key)) {\n\t\t\t\tcallback(object[key], key);\n\t\t\t}\n\t\t}\n\t}\n};\n\n\n\nexport const cmp = (a:number|string, b:number|string) => {\n\tif (typeof a === 'number' && typeof b === 'number') {\n\t\treturn a > b ? 1 : (a < b ? -1 : 0);\n\t}\n\ta = asciifold(a + '').toLowerCase();\n\tb = asciifold(b + '').toLowerCase();\n\tif (a > b) return 1;\n\tif (b > a) return -1;\n\treturn 0;\n};\n", "\nimport { iterate } from '@orchidjs/sifter/lib/utils';\n\n/**\n * Return a dom element from either a dom query string, jQuery object, a dom element or html string\n * https://stackoverflow.com/questions/494143/creating-a-new-dom-element-from-an-html-string-using-built-in-dom-methods-or-pro/35385518#35385518\n *\n * param query should be {}\n */\nexport const getDom = ( query:any ):HTMLElement => {\n\n\tif( query.jquery ){\n\t\treturn query[0];\n\t}\n\n\tif( query instanceof HTMLElement ){\n\t\treturn query;\n\t}\n\n\tif( isHtmlString(query) ){\n\t\tvar tpl = document.createElement('template');\n\t\ttpl.innerHTML = query.trim(); // Never return a text node of whitespace as the result\n\t\treturn tpl.content.firstChild as HTMLElement;\n\t}\n\n\treturn document.querySelector(query);\n};\n\nexport const isHtmlString = (arg:any): boolean => {\n\tif( typeof arg === 'string' && arg.indexOf('<') > -1 ){\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nexport const escapeQuery = (query:string):string => {\n\treturn query.replace(/['\"\\\\]/g, '\\\\$&');\n}\n\n/**\n * Dispatch an event\n *\n */\nexport const triggerEvent = ( dom_el:HTMLElement, event_name:string ):void => {\n\tvar event = document.createEvent('HTMLEvents');\n\tevent.initEvent(event_name, true, false);\n\tdom_el.dispatchEvent(event)\n};\n\n/**\n * Apply CSS rules to a dom element\n *\n */\nexport const applyCSS = ( dom_el:HTMLElement, css:{ [key: string]: string|number }):void => {\n\tObject.assign(dom_el.style, css);\n}\n\n\n/**\n * Add css classes\n *\n */\nexport const addClasses = ( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ) => {\n\n\tvar norm_classes \t= classesArray(classes);\n\telmts\t\t\t\t= castAsArray(elmts);\n\n\telmts.map( el => {\n\t\tnorm_classes.map( cls => {\n\t\t\tel.classList.add( cls );\n\t\t});\n\t});\n}\n\n/**\n * Remove css classes\n *\n */\n export const removeClasses = ( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ) => {\n\n \tvar norm_classes \t= classesArray(classes);\n\telmts\t\t\t\t= castAsArray(elmts);\n\n\telmts.map( el => {\n\t\tnorm_classes.map(cls => {\n\t \t\tel.classList.remove( cls );\n\t\t});\n \t});\n }\n\n\n/**\n * Return arguments\n *\n */\nexport const classesArray = (args:string[]|string[][]):string[] => {\n\tvar classes:string[] = [];\n\titerate( args, (_classes) =>{\n\t\tif( typeof _classes === 'string' ){\n\t\t\t_classes = _classes.trim().split(/[\\11\\12\\14\\15\\40]/);\n\t\t}\n\t\tif( Array.isArray(_classes) ){\n\t\t\tclasses = classes.concat(_classes);\n\t\t}\n\t});\n\n\treturn classes.filter(Boolean);\n}\n\n\n/**\n * Create an array from arg if it's not already an array\n *\n */\nexport const castAsArray = (arg:any):Array<any> => {\n\tif( !Array.isArray(arg) ){\n \t\targ = [arg];\n \t}\n\treturn arg;\n}\n\n\n/**\n * Get the closest node to the evt.target matching the selector\n * Stops at wrapper\n *\n */\nexport const parentMatch = ( target:null|HTMLElement, selector:string, wrapper?:HTMLElement ):HTMLElement|void => {\n\n\tif( wrapper && !wrapper.contains(target) ){\n\t\treturn;\n\t}\n\n\twhile( target && target.matches ){\n\n\t\tif( target.matches(selector) ){\n\t\t\treturn target;\n\t\t}\n\n\t\ttarget = target.parentNode as HTMLElement;\n\t}\n}\n\n\n/**\n * Get the first or last item from an array\n *\n * > 0 - right (last)\n * <= 0 - left (first)\n *\n */\nexport const getTail = ( list:Array<any>|NodeList, direction:number=0 ):any => {\n\n\tif( direction > 0 ){\n\t\treturn list[list.length-1];\n\t}\n\n\treturn list[0];\n}\n\n/**\n * Return true if an object is empty\n *\n */\nexport const isEmptyObject = (obj:object):boolean => {\n\treturn (Object.keys(obj).length === 0);\n}\n\n\n/**\n * Get the index of an element amongst sibling nodes of the same type\n *\n */\nexport const nodeIndex = ( el:null|Element, amongst?:string ):number => {\n\tif (!el) return -1;\n\n\tamongst = amongst || el.nodeName;\n\n\tvar i = 0;\n\twhile( el = el.previousElementSibling ){\n\n\t\tif( el.matches(amongst) ){\n\t\t\ti++;\n\t\t}\n\t}\n\treturn i;\n}\n\n\n/**\n * Set attributes of an element\n *\n */\nexport const setAttr = (el:Element,attrs:{ [key: string]: null|string|number }) => {\n\titerate( attrs,(val,attr) => {\n\t\tif( val == null ){\n\t\t\tel.removeAttribute(attr as string);\n\t\t}else{\n\t\t\tel.setAttribute(attr as string, ''+val);\n\t\t}\n\t});\n}\n\n\n/**\n * Replace a node\n */\nexport const replaceNode = ( existing:Node, replacement:Node ) => {\n\tif( existing.parentNode ) existing.parentNode.replaceChild(replacement, existing);\n}\n", "/**\n * highlight v3 | MIT license | Johann Burkard <jb@eaio.com>\n * Highlights arbitrary terms in a node.\n *\n * - Modified by Marshal <beatgates@gmail.com> 2011-6-24 (added regex)\n * - Modified by Brian Reavis <brian@thirdroute.com> 2012-8-27 (cleanup)\n */\n\nimport {replaceNode} from '../vanilla';\n\n\nexport const highlight = (element:HTMLElement, regex:string|RegExp) => {\n\n\tif( regex === null ) return;\n\n\t// convet string to regex\n\tif( typeof regex === 'string' ){\n\n\t\tif( !regex.length ) return;\n\t\tregex = new RegExp(regex, 'i');\n\t}\n\n\n\t// Wrap matching part of text node with highlighting <span>, e.g.\n\t// Soccer  ->  <span class=\"highlight\">Soc</span>cer  for regex = /soc/i\n\tconst highlightText = ( node:Text ):number => {\n\n\t\tvar match = node.data.match(regex);\n\t\tif( match && node.data.length > 0 ){\n\t\t\tvar spannode\t\t= document.createElement('span');\n\t\t\tspannode.className\t= 'highlight';\n\t\t\tvar middlebit\t\t= node.splitText(match.index as number);\n\n\t\t\tmiddlebit.splitText(match[0]!.length);\n\t\t\tvar middleclone\t\t= middlebit.cloneNode(true);\n\n\t\t\tspannode.appendChild(middleclone);\n\t\t\treplaceNode(middlebit, spannode);\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn 0;\n\t};\n\n\t// Recurse element node, looking for child text nodes to highlight, unless element\n\t// is childless, <script>, <style>, or already highlighted: <span class=\"hightlight\">\n\tconst highlightChildren = ( node:Element ):void => {\n\t\tif( node.nodeType === 1 && node.childNodes && !/(script|style)/i.test(node.tagName) && ( node.className !== 'highlight' || node.tagName !== 'SPAN' ) ){\n\t\t\tArray.from(node.childNodes).forEach(element => {\n\t\t\t\thighlightRecursive(element);\n\t\t\t});\n\t\t}\n\t};\n\n\n\tconst highlightRecursive = ( node:Node|Element ):number => {\n\n\t\tif( node.nodeType === 3 ){\n\t\t\treturn highlightText(node as Text);\n\t\t}\n\n\t\thighlightChildren(node as Element);\n\n\t\treturn 0;\n\t};\n\n\thighlightRecursive( element );\n};\n\n/**\n * removeHighlight fn copied from highlight v5 and\n * edited to remove with(), pass js strict mode, and use without jquery\n */\nexport const removeHighlight = (el:HTMLElement) => {\n\tvar elements = el.querySelectorAll(\"span.highlight\");\n\tArray.prototype.forEach.call(elements, function(el:HTMLElement){\n\t\tvar parent = el.parentNode as Node;\n\t\tparent.replaceChild(el.firstChild as Node, el);\n\t\tparent.normalize();\n\t});\n};\n", "export const KEY_A\t\t\t\t= 65;\nexport const KEY_RETURN\t\t\t= 13;\nexport const KEY_ESC\t\t\t= 27;\nexport const KEY_LEFT\t\t\t= 37;\nexport const KEY_UP\t\t\t\t= 38;\nexport const KEY_RIGHT\t\t\t= 39;\nexport const KEY_DOWN\t\t\t= 40;\nexport const KEY_BACKSPACE\t\t= 8;\nexport const KEY_DELETE\t\t\t= 46;\nexport const KEY_TAB\t\t\t= 9;\n\nexport const IS_MAC      \t\t= typeof navigator === 'undefined' ? false : /Mac/.test(navigator.userAgent);\nexport const KEY_SHORTCUT\t\t= IS_MAC ? 'metaKey' : 'ctrlKey'; // ctrl key or apple key for ma\n", "\nexport default {\n\toptions: [],\n\toptgroups: [],\n\n\tplugins: [],\n\tdelimiter: ',',\n\tsplitOn: null, // regexp or string for splitting up values from a paste command\n\tpersist: true,\n\tdiacritics: true,\n\tcreate: null,\n\tcreateOnBlur: false,\n\tcreateFilter: null,\n\thighlight: true,\n\topenOnFocus: true,\n\tshouldOpen: null,\n\tmaxOptions: 50,\n\tmaxItems: null,\n\thideSelected: null,\n\tduplicates: false,\n\taddPrecedence: false,\n\tselectOnTab: false,\n\tpreload: null,\n\tallowEmptyOption: false,\n\t//closeAfterSelect: false,\n\trefreshThrottle: 300,\n\n\n\tloadThrottle: 300,\n\tloadingClass: 'loading',\n\n\tdataAttr: null, //'data-data',\n\toptgroupField: 'optgroup',\n\tvalueField: 'value',\n\tlabelField: 'text',\n\tdisabledField: 'disabled',\n\toptgroupLabelField: 'label',\n\toptgroupValueField: 'value',\n\tlockOptgroupOrder: false,\n\n\tsortField: '$order',\n\tsearchField: ['text'],\n\tsearchConjunction: 'and',\n\n\tmode: null,\n\twrapperClass: 'ts-wrapper',\n\tcontrolClass: 'ts-control',\n\tdropdownClass: 'ts-dropdown',\n\tdropdownContentClass: 'ts-dropdown-content',\n\titemClass: 'item',\n\toptionClass: 'option',\n\n\tdropdownParent: null,\n\tcontrolInput: '<input type=\"text\" autocomplete=\"off\" size=\"1\" />',\n\n\tcopyClassesToDropdown: false,\n\n\tplaceholder: null,\n\thidePlaceholder: null,\n\n\tshouldLoad: function(query:string):boolean{\n\t\treturn query.length > 0;\n\t},\n\n\t/*\n\tload                 : null, // function(query, callback) { ... }\n\tscore                : null, // function(search) { ... }\n\tonInitialize         : null, // function() { ... }\n\tonChange             : null, // function(value) { ... }\n\tonItemAdd            : null, // function(value, $item) { ... }\n\tonItemRemove         : null, // function(value) { ... }\n\tonClear              : null, // function() { ... }\n\tonOptionAdd          : null, // function(value, data) { ... }\n\tonOptionRemove       : null, // function(value) { ... }\n\tonOptionClear        : null, // function() { ... }\n\tonOptionGroupAdd     : null, // function(id, data) { ... }\n\tonOptionGroupRemove  : null, // function(id) { ... }\n\tonOptionGroupClear   : null, // function() { ... }\n\tonDropdownOpen       : null, // function(dropdown) { ... }\n\tonDropdownClose      : null, // function(dropdown) { ... }\n\tonType               : null, // function(str) { ... }\n\tonDelete             : null, // function(values) { ... }\n\t*/\n\n\trender: {\n\t\t/*\n\t\titem: null,\n\t\toptgroup: null,\n\t\toptgroup_header: null,\n\t\toption: null,\n\t\toption_create: null\n\t\t*/\n\t}\n};\n", "\nimport TomSelect from './tom-select';\nimport { TomLoadCallback } from './types/index';\n\n\n/**\n * Converts a scalar to its best string representation\n * for hash keys and HTML attribute values.\n *\n * Transformations:\n *   'str'     -> 'str'\n *   null      -> ''\n *   undefined -> ''\n *   true      -> '1'\n *   false     -> '0'\n *   0         -> '0'\n *   1         -> '1'\n *\n */\nexport const hash_key = (value:undefined|null|boolean|string|number):string|null => {\n\tif (typeof value === 'undefined' || value === null) return null;\n\treturn get_hash(value);\n};\n\nexport const get_hash = (value:boolean|string|number):string => {\n\tif (typeof value === 'boolean') return value ? '1' : '0';\n\treturn value + '';\n};\n\n/**\n * Escapes a string for use within HTML.\n *\n */\nexport const escape_html = (str:string):string => {\n\treturn (str + '')\n\t\t.replace(/&/g, '&amp;')\n\t\t.replace(/</g, '&lt;')\n\t\t.replace(/>/g, '&gt;')\n\t\t.replace(/\"/g, '&quot;');\n};\n\n\n/**\n * use setTimeout if timeout > 0 \n */\nexport const timeout = (fn:()=>void,timeout:number) => {\n\tif( timeout > 0 ){\n\t\treturn setTimeout(fn,timeout);\n\t}\n\n\tfn.call(null);\n\treturn null;\n}\n\n/**\n * Debounce the user provided load function\n *\n */\nexport const loadDebounce = (fn:(value:string,callback:TomLoadCallback) => void,delay:number) => {\n\tvar timeout: null|ReturnType<typeof setTimeout>;\n\treturn function(this:TomSelect, value:string,callback:TomLoadCallback) {\n\t\tvar self = this;\n\n\t\tif( timeout ){\n\t\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\t\tclearTimeout(timeout);\n\t\t}\n\t\ttimeout = setTimeout(function() {\n\t\t\ttimeout = null;\n\t\t\tself.loadedSearches[value] = true;\n\t\t\tfn.call(self, value, callback);\n\n\t\t}, delay);\n\t};\n};\n\n\n/**\n * Debounce all fired events types listed in `types`\n * while executing the provided `fn`.\n *\n */\nexport const debounce_events = ( self:TomSelect, types:string[], fn:() => void ) => {\n\tvar type:string;\n\tvar trigger = self.trigger;\n\tvar event_args:{ [key: string]: any } = {};\n\n\t// override trigger method\n\tself.trigger = function(){\n\t\tvar type = arguments[0];\n\t\tif (types.indexOf(type) !== -1) {\n\t\t\tevent_args[type] = arguments;\n\t\t} else {\n\t\t\treturn trigger.apply(self, arguments);\n\t\t}\n\t};\n\n\t// invoke provided function\n\tfn.apply(self, []);\n\tself.trigger = trigger;\n\n\t// trigger queued events\n\tfor( type of types ){\n\t\tif( type in event_args ){\n\t\t\ttrigger.apply(self, event_args[type]);\n\t\t}\n\t}\n};\n\n\n/**\n * Determines the current selection within a text input control.\n * Returns an object containing:\n *   - start\n *   - length\n *\n * Note: \"selectionStart, selectionEnd ... apply only to inputs of types text, search, URL, tel and password\"\n * \t- https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/setSelectionRange\n */\nexport const getSelection = (input:HTMLInputElement):{ start: number; length: number } => {\n\treturn {\n\t\tstart\t: input.selectionStart || 0,\n\t\tlength\t: (input.selectionEnd||0) - (input.selectionStart||0),\n\t};\n};\n\n\n/**\n * Prevent default\n *\n */\nexport const preventDefault = (evt?:Event, stop:boolean=false):void => {\n\tif( evt ){\n\t\tevt.preventDefault();\n\t\tif( stop ){\n\t\t\tevt.stopPropagation();\n\t\t}\n\t}\n}\n\n\n/**\n * Add event helper\n *\n */\nexport const addEvent = (target:EventTarget, type:string, callback:EventListenerOrEventListenerObject, options?:object):void => {\n\ttarget.addEventListener(type,callback,options);\n};\n\n\n/**\n * Return true if the requested key is down\n * Will return false if more than one control character is pressed ( when [ctrl+shift+a] != [ctrl+a] )\n * The current evt may not always set ( eg calling advanceSelection() )\n *\n */\nexport const isKeyDown = ( key_name:keyof (KeyboardEvent|MouseEvent), evt?:KeyboardEvent|MouseEvent ) => {\n\n\tif( !evt ){\n\t\treturn false;\n\t}\n\n\tif( !evt[key_name] ){\n\t\treturn false;\n\t}\n\n\tvar count = (evt.altKey?1:0) + (evt.ctrlKey?1:0) + (evt.shiftKey?1:0) + (evt.metaKey?1:0);\n\n\tif( count === 1 ){\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\n\n/**\n * Get the id of an element\n * If the id attribute is not set, set the attribute with the given id\n *\n */\nexport const getId = (el:Element,id:string) => {\n\tconst existing_id = el.getAttribute('id');\n\tif( existing_id ){\n\t\treturn existing_id;\n\t}\n\n\tel.setAttribute('id',id);\n\treturn id;\n};\n\n\n/**\n * Returns a string with backslashes added before characters that need to be escaped.\n */\nexport const addSlashes = (str:string):string => {\n\treturn str.replace(/[\\\\\"']/g, '\\\\$&');\n};\n\n/**\n *\n */\nexport const append = ( parent:Element|DocumentFragment, node: string|Node|null|undefined ):void =>{\n\tif( node ) parent.append(node);\n};\n", "import defaults from './defaults';\nimport { hash_key } from './utils';\nimport { TomOption, TomSettings, RecursivePartial } from './types/index';\nimport { iterate } from '@orchidjs/sifter/lib/utils';\nimport { TomInput } from './types/index';\n\n\nexport default function getSettings( input:TomInput, settings_user:RecursivePartial<TomSettings>):TomSettings{\n\tvar settings:TomSettings\t= Object.assign({}, defaults, settings_user);\n\n\tvar attr_data\t\t\t\t= settings.dataAttr;\n\tvar field_label\t\t\t\t= settings.labelField;\n\tvar field_value\t\t\t\t= settings.valueField;\n\tvar field_disabled\t\t\t= settings.disabledField;\n\tvar field_optgroup\t\t\t= settings.optgroupField;\n\tvar field_optgroup_label\t= settings.optgroupLabelField;\n\tvar field_optgroup_value\t= settings.optgroupValueField;\n\n\tvar tag_name\t\t\t\t= input.tagName.toLowerCase();\n\tvar placeholder\t\t\t\t= input.getAttribute('placeholder') || input.getAttribute('data-placeholder');\n\n\tif (!placeholder && !settings.allowEmptyOption) {\n\t\tlet option\t\t= input.querySelector('option[value=\"\"]');\n\t\tif( option ){\n\t\t\tplaceholder = option.textContent;\n\t\t}\n\n\t}\n\n\tvar settings_element:{\n\t\tplaceholder\t: null|string,\n\t\toptions\t\t: TomOption[],\n\t\toptgroups\t: TomOption[],\n\t\titems\t\t: string[],\n\t\tmaxItems\t: null|number,\n\t} = {\n\t\tplaceholder\t: placeholder,\n\t\toptions\t\t: [],\n\t\toptgroups\t: [],\n\t\titems\t\t: [],\n\t\tmaxItems\t: null,\n\t};\n\n\n\t/**\n\t * Initialize from a <select> element.\n\t *\n\t */\n\tvar init_select = () => {\n\t\tvar tagName;\n\t\tvar options = settings_element.options;\n\t\tvar optionsMap:{[key:string]:any} = {};\n\t\tvar group_count = 1;\n\t\tlet $order = 0;\n\n\t\tvar readData = (el:HTMLElement):TomOption => {\n\n\t\t\tvar data\t= Object.assign({},el.dataset); // get plain object from DOMStringMap\n\t\t\tvar json\t= attr_data && data[attr_data];\n\n\t\t\tif( typeof json === 'string' && json.length ){\n\t\t\t\tdata = Object.assign(data,JSON.parse(json));\n\t\t\t}\n\n\t\t\treturn data;\n\t\t};\n\n\t\tvar addOption = (option:HTMLOptionElement, group?:string) => {\n\n\t\t\tvar value = hash_key(option.value);\n\t\t\tif ( value == null ) return;\n\t\t\tif ( !value && !settings.allowEmptyOption) return;\n\n\t\t\t// if the option already exists, it's probably been\n\t\t\t// duplicated in another optgroup. in this case, push\n\t\t\t// the current group to the \"optgroup\" property on the\n\t\t\t// existing option so that it's rendered in both places.\n\t\t\tif (optionsMap.hasOwnProperty(value)) {\n\t\t\t\tif (group) {\n\t\t\t\t\tvar arr = optionsMap[value][field_optgroup];\n\t\t\t\t\tif (!arr) {\n\t\t\t\t\t\toptionsMap[value][field_optgroup] = group;\n\t\t\t\t\t} else if (!Array.isArray(arr)) {\n\t\t\t\t\t\toptionsMap[value][field_optgroup] = [arr, group];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tarr.push(group);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}else{\n\n\t\t\t\tvar option_data             = readData(option);\n\t\t\t\toption_data[field_label]    = option_data[field_label] || option.textContent;\n\t\t\t\toption_data[field_value]    = option_data[field_value] || value;\n\t\t\t\toption_data[field_disabled] = option_data[field_disabled] || option.disabled;\n\t\t\t\toption_data[field_optgroup] = option_data[field_optgroup] || group;\n\t\t\t\toption_data.$option\t\t\t= option;\n\t\t\t\toption_data.$order\t\t\t= option_data.$order || ++$order;\n\n\t\t\t\toptionsMap[value] = option_data;\n\t\t\t\toptions.push(option_data);\n\t\t\t}\n\n\t\t\tif( option.selected ){\n\t\t\t\tsettings_element.items.push(value);\n\t\t\t}\n\t\t};\n\n\t\tvar addGroup = ( optgroup:HTMLOptGroupElement ) => {\n\t\t\tvar id:string, optgroup_data\n\n\t\t\toptgroup_data\t\t\t\t\t\t\t= readData(optgroup);\n\t\t\toptgroup_data[field_optgroup_label]\t\t= optgroup_data[field_optgroup_label] || optgroup.getAttribute('label') || '';\n\t\t\toptgroup_data[field_optgroup_value]\t\t= optgroup_data[field_optgroup_value] || group_count++;\n\t\t\toptgroup_data[field_disabled]\t\t\t= optgroup_data[field_disabled] || optgroup.disabled;\n\t\t\toptgroup_data.$order\t\t\t\t\t= optgroup_data.$order || ++$order;\n\n\t\t\tsettings_element.optgroups.push(optgroup_data);\n\n\t\t\tid = optgroup_data[field_optgroup_value];\n\n\t\t\titerate(optgroup.children, (option)=>{\n\t\t\t\taddOption(option as HTMLOptionElement, id);\n\t\t\t});\n\n\t\t};\n\n\t\tsettings_element.maxItems = input.hasAttribute('multiple') ? null : 1;\n\n\t\titerate(input.children,(child)=>{\n\t\t\ttagName = child.tagName.toLowerCase();\n\t\t\tif (tagName === 'optgroup') {\n\t\t\t\taddGroup(child as HTMLOptGroupElement);\n\t\t\t} else if (tagName === 'option') {\n\t\t\t\taddOption(child as HTMLOptionElement);\n\t\t\t}\n\t\t});\n\n\t};\n\n\n\t/**\n\t * Initialize from a <input type=\"text\"> element.\n\t *\n\t */\n\tvar init_textbox = () => {\n\t\tconst data_raw = input.getAttribute(attr_data);\n\n\t\tif (!data_raw) {\n\t\t\tvar value = input.value.trim() || '';\n\t\t\tif (!settings.allowEmptyOption && !value.length) return;\n\t\t\tconst values = value.split(settings.delimiter);\n\n\t\t\titerate( values, (value) => {\n\t\t\t\tconst option:TomOption = {};\n\t\t\t\toption[field_label] = value;\n\t\t\t\toption[field_value] = value;\n\t\t\t\tsettings_element.options.push(option);\n\t\t\t});\n\t\t\tsettings_element.items = values;\n\t\t} else {\n\t\t\tsettings_element.options = JSON.parse(data_raw);\n\t\t\titerate( settings_element.options, (opt) => {\n\t\t\t\tsettings_element.items.push(opt[field_value]);\n\t\t\t});\n\t\t}\n\t};\n\n\n\tif (tag_name === 'select') {\n\t\tinit_select();\n\t} else {\n\t\tinit_textbox();\n\t}\n\n\treturn Object.assign( {}, defaults, settings_element, settings_user) as TomSettings;\n};\n", "\nimport MicroEvent from './contrib/microevent';\nimport MicroPlugin from './contrib/microplugin';\nimport { Sifter, iterate } from '@orchidjs/sifter';\nimport { escape_regex } from '@orchidjs/unicode-variants';\nimport { TomInput, TomArgObject, TomOption, TomOptions, TomCreateFilter, TomCreateCallback, TomItem, TomSettings, TomTemplateNames, TomClearFilter, RecursivePartial } from './types/index';\nimport {highlight, removeHighlight} from './contrib/highlight';\nimport * as constants from './constants';\nimport getSettings from './getSettings';\nimport {\n\thash_key,\n\tget_hash,\n\tescape_html,\n\tdebounce_events,\n\tgetSelection,\n\tpreventDefault,\n\taddEvent,\n\tloadDebounce,\n\ttimeout,\n\tisKeyDown,\n\tgetId,\n\taddSlashes,\n\tappend\n} from './utils';\n\nimport {\n\tgetDom,\n\tisHtmlString,\n\tescapeQuery,\n\ttriggerEvent,\n\tapplyCSS,\n\taddClasses,\n\tremoveClasses,\n\tparentMatch,\n\tgetTail,\n\tisEmptyObject,\n\tnodeIndex,\n\tsetAttr,\n\treplaceNode\n} from './vanilla';\n\nvar instance_i = 0;\n\nexport default class TomSelect extends MicroPlugin(MicroEvent){\n\n\tpublic control_input\t\t\t: HTMLInputElement;\n\tpublic wrapper\t\t\t\t\t: HTMLElement;\n\tpublic dropdown\t\t\t\t\t: HTMLElement;\n\tpublic control\t\t\t\t\t: HTMLElement;\n\tpublic dropdown_content\t\t\t: HTMLElement;\n\tpublic focus_node\t\t\t\t: HTMLElement;\n\n\tpublic order\t\t\t\t\t: number = 0;\n\tpublic settings\t\t\t\t\t: TomSettings;\n\tpublic input\t\t\t\t\t: TomInput;\n\tpublic tabIndex\t\t\t\t\t: number;\n\tpublic is_select_tag\t\t\t: boolean;\n\tpublic rtl\t\t\t\t\t\t: boolean;\n\tprivate inputId\t\t\t\t\t: string;\n\n\tprivate _destroy\t\t\t\t!: () => void;\n\tpublic sifter\t\t\t\t\t: Sifter;\n\n\n\tpublic isOpen\t\t\t\t\t: boolean = false;\n\tpublic isDisabled\t\t\t\t: boolean = false;\n\tpublic isReadOnly\t\t\t\t: boolean = false;\n\tpublic isRequired\t\t\t\t: boolean;\n\tpublic isInvalid\t\t\t\t: boolean = false; // @deprecated 1.8\n\tpublic isValid\t\t\t\t\t: boolean = true;\n\tpublic isLocked\t\t\t\t\t: boolean = false;\n\tpublic isFocused\t\t\t\t: boolean = false;\n\tpublic isInputHidden\t\t\t: boolean = false;\n\tpublic isSetup\t\t\t\t\t: boolean = false;\n\tpublic ignoreFocus\t\t\t\t: boolean = false;\n\tpublic ignoreHover\t\t\t\t: boolean = false;\n\tpublic hasOptions\t\t\t\t: boolean = false;\n\tpublic currentResults\t\t\t?: ReturnType<Sifter['search']>;\n\tpublic lastValue\t\t\t\t: string = '';\n\tpublic caretPos\t\t\t\t\t: number = 0;\n\tpublic loading\t\t\t\t\t: number = 0;\n\tpublic loadedSearches\t\t\t: { [key: string]: boolean } = {};\n\n\tpublic activeOption\t\t\t\t: null|HTMLElement = null;\n\tpublic activeItems\t\t\t\t: TomItem[] = [];\n\n\tpublic optgroups\t\t\t\t: TomOptions = {};\n\tpublic options\t\t\t\t\t: TomOptions = {};\n\tpublic userOptions\t\t\t\t: {[key:string]:boolean} = {};\n\tpublic items\t\t\t\t\t: string[] = [];\n\n\tprivate refreshTimeout\t\t\t: null|ReturnType<typeof setTimeout> = null;\n\n\n\tconstructor( input_arg: string|TomInput, user_settings:RecursivePartial<TomSettings> ){\n\t\tsuper();\n\n\t\tinstance_i++;\n\n\t\tvar dir;\n\t\tvar input\t\t\t\t= getDom( input_arg ) as TomInput;\n\n\t\tif( input.tomselect ){\n\t\t\tthrow new Error('Tom Select already initialized on this element');\n\t\t}\n\n\n\t\tinput.tomselect\t\t\t= this;\n\n\n\t\t// detect rtl environment\n\t\tvar computedStyle\t\t= window.getComputedStyle && window.getComputedStyle(input, null);\n\t\tdir\t\t\t\t\t\t= computedStyle.getPropertyValue('direction');\n\n\t\t// setup default state\n\t\tconst settings\t\t\t= getSettings( input, user_settings );\n\t\tthis.settings\t\t\t= settings;\n\t\tthis.input\t\t\t\t= input;\n\t\tthis.tabIndex\t\t\t= input.tabIndex || 0;\n\t\tthis.is_select_tag\t\t= input.tagName.toLowerCase() === 'select';\n\t\tthis.rtl\t\t\t\t= /rtl/i.test(dir);\n\t\tthis.inputId\t\t\t= getId(input, 'tomselect-'+instance_i);\n\t\tthis.isRequired\t\t\t= input.required;\n\n\n\t\t// search system\n\t\tthis.sifter = new Sifter(this.options, {diacritics: settings.diacritics});\n\n\t\t// option-dependent defaults\n\t\tsettings.mode = settings.mode || (settings.maxItems === 1 ? 'single' : 'multi');\n\t\tif (typeof settings.hideSelected !== 'boolean') {\n\t\t\tsettings.hideSelected = settings.mode === 'multi';\n\t\t}\n\n\t\tif( typeof settings.hidePlaceholder !== 'boolean' ){\n\t\t\tsettings.hidePlaceholder = settings.mode !== 'multi';\n\t\t}\n\n\t\t// set up createFilter callback\n\t\tvar filter = settings.createFilter;\n\t\tif( typeof filter !== 'function' ){\n\n\t\t\tif( typeof filter === 'string' ){\n\t\t\t\tfilter = new RegExp(filter);\n\t\t\t}\n\n\t\t\tif( filter instanceof RegExp ){\n\t\t\t\tsettings.createFilter = (input) => (filter as RegExp).test(input);\n\t\t\t}else{\n\t\t\t\tsettings.createFilter = (value) => {\n\t\t\t\t\treturn this.settings.duplicates || !this.options[value];\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\n\t\tthis.initializePlugins(settings.plugins);\n\t\tthis.setupCallbacks();\n\t\tthis.setupTemplates();\n\n\n\t\t// Create all elements\n\t\tconst wrapper\t\t\t= getDom('<div>');\n\t\tconst control\t\t\t= getDom('<div>');\n\t\tconst dropdown\t\t\t= this._render('dropdown');\n\t\tconst dropdown_content\t= getDom(`<div role=\"listbox\" tabindex=\"-1\">`);\n\n\t\tconst classes\t\t\t= this.input.getAttribute('class') || '';\n\t\tconst inputMode\t\t\t= settings.mode;\n\n\t\tvar control_input: HTMLInputElement;\n\n\n\t\taddClasses( wrapper, settings.wrapperClass, classes, inputMode);\n\n\n\t\taddClasses(control,settings.controlClass);\n\t\tappend( wrapper, control );\n\n\n\t\taddClasses(dropdown, settings.dropdownClass, inputMode);\n\t\tif( settings.copyClassesToDropdown ){\n\t\t\taddClasses( dropdown, classes);\n\t\t}\n\n\n\t\taddClasses(dropdown_content, settings.dropdownContentClass);\n\t\tappend( dropdown, dropdown_content );\n\n\t\tgetDom( settings.dropdownParent || wrapper ).appendChild( dropdown );\n\n\n\t\t// default controlInput\n\t\tif( isHtmlString(settings.controlInput) ){\n\t\t\tcontrol_input\t\t= getDom(settings.controlInput ) as HTMLInputElement;\n\n\t\t\t// set attributes\n\t\t\tvar attrs = ['autocorrect','autocapitalize','autocomplete','spellcheck'];\n\t\t\titerate(attrs,(attr:string) => {\n\t\t\t\tif( input.getAttribute(attr) ){\n\t\t\t\t\tsetAttr(control_input,{[attr]:input.getAttribute(attr)});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tcontrol_input.tabIndex = -1;\n\t\t\tcontrol.appendChild( control_input );\n\t\t\tthis.focus_node\t\t= control_input;\n\n\t\t// dom element\n\t\t}else if( settings.controlInput ){\n\t\t\tcontrol_input\t\t= getDom( settings.controlInput ) as HTMLInputElement;\n\t\t\tthis.focus_node\t\t= control_input;\n\n\t\t}else{\n\t\t\tcontrol_input\t\t= getDom('<input/>') as HTMLInputElement;\n\t\t\tthis.focus_node\t\t= control;\n\t\t}\n\n\t\tthis.wrapper\t\t\t= wrapper;\n\t\tthis.dropdown\t\t\t= dropdown;\n\t\tthis.dropdown_content\t= dropdown_content;\n\t\tthis.control \t\t\t= control;\n\t\tthis.control_input\t\t= control_input;\n\n\t\tthis.setup();\n\t}\n\n\t/**\n\t * set up event bindings.\n\t *\n\t */\n\tsetup(){\n\n\t\tconst self = this;\n\t\tconst settings\t\t\t\t= self.settings;\n\t\tconst control_input\t\t\t= self.control_input;\n\t\tconst dropdown\t\t\t\t= self.dropdown;\n\t\tconst dropdown_content\t\t= self.dropdown_content;\n\t\tconst wrapper\t\t\t\t= self.wrapper;\n\t\tconst control\t\t\t\t= self.control;\n\t\tconst input\t\t\t\t\t= self.input;\n\t\tconst focus_node\t\t\t= self.focus_node;\n\t\tconst passive_event\t\t\t= { passive: true };\n\t\tconst listboxId\t\t\t\t= self.inputId +'-ts-dropdown';\n\n\n\t\tsetAttr(dropdown_content,{\n\t\t\tid: listboxId\n\t\t});\n\n\t\tsetAttr(focus_node,{\n\t\t\trole:'combobox',\n\t\t\t'aria-haspopup':'listbox',\n\t\t\t'aria-expanded':'false',\n\t\t\t'aria-controls':listboxId\n\t\t});\n\n\t\tconst control_id\t= getId(focus_node,self.inputId + '-ts-control');\n\t\tconst query\t\t\t= \"label[for='\"+escapeQuery(self.inputId)+\"']\";\n\t\tconst label\t\t\t= document.querySelector(query);\n\t\tconst label_click\t= self.focus.bind(self);\n\t\tif( label ){\n\t\t\taddEvent(label,'click', label_click );\n\t\t\tsetAttr(label,{for:control_id});\n\t\t\tconst label_id = getId(label,self.inputId+'-ts-label');\n\t\t\tsetAttr(focus_node,{'aria-labelledby':label_id});\n\t\t\tsetAttr(dropdown_content,{'aria-labelledby':label_id});\n\t\t}\n\n\t\twrapper.style.width = input.style.width;\n\n\t\tif (self.plugins.names.length) {\n\t\t\tconst classes_plugins = 'plugin-' + self.plugins.names.join(' plugin-');\n\t\t\taddClasses( [wrapper,dropdown], classes_plugins);\n\t\t}\n\n\t\tif ((settings.maxItems === null || settings.maxItems > 1) && self.is_select_tag ){\n\t\t\tsetAttr(input,{multiple:'multiple'});\n\t\t}\n\n\t\tif (settings.placeholder) {\n\t\t\tsetAttr(control_input,{placeholder:settings.placeholder});\n\t\t}\n\n\t\t// if splitOn was not passed in, construct it from the delimiter to allow pasting universally\n\t\tif (!settings.splitOn && settings.delimiter) {\n\t\t\tsettings.splitOn = new RegExp('\\\\s*' + escape_regex(settings.delimiter) + '+\\\\s*');\n\t\t}\n\n\t\t// debounce user defined load() if loadThrottle > 0\n\t\t// after initializePlugins() so plugins can create/modify user defined loaders\n\t\tif( settings.load && settings.loadThrottle ){\n\t\t\tsettings.load = loadDebounce(settings.load,settings.loadThrottle)\n\t\t}\n\n\t\taddEvent(dropdown,'mousemove', () => {\n\t\t\tself.ignoreHover = false;\n\t\t});\n\n\t\taddEvent(dropdown,'mouseenter', (e) => {\n\n\t\t\tvar target_match = parentMatch(e.target as HTMLElement, '[data-selectable]', dropdown);\n\t\t\tif( target_match ) self.onOptionHover( e as MouseEvent, target_match );\n\n\t\t}, {capture:true});\n\n\t\t// clicking on an option should select it\n\t\taddEvent(dropdown,'click',(evt) => {\n\t\t\tconst option = parentMatch(evt.target as HTMLElement, '[data-selectable]');\n\t\t\tif( option ){\n\t\t\t\tself.onOptionSelect( evt as MouseEvent, option );\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t}\n\t\t});\n\n\t\taddEvent(control,'click', (evt) => {\n\n\t\t\tvar target_match = parentMatch( evt.target as HTMLElement, '[data-ts-item]', control);\n\t\t\tif( target_match && self.onItemSelect(evt as MouseEvent, target_match as TomItem) ){\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// retain focus (see control_input mousedown)\n\t\t\tif( control_input.value != '' ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tself.onClick();\n\t\t\tpreventDefault(evt,true);\n\t\t});\n\n\n\t\t// keydown on focus_node for arrow_down/arrow_up\n\t\taddEvent(focus_node,'keydown',\t\t(e) => self.onKeyDown(e as KeyboardEvent) );\n\n\t\t// keypress and input/keyup\n\t\taddEvent(control_input,'keypress',\t(e) => self.onKeyPress(e as KeyboardEvent) );\n\t\taddEvent(control_input,'input',\t\t(e) => self.onInput(e as KeyboardEvent) );\n\t\taddEvent(focus_node,'blur', \t\t(e) => self.onBlur(e as FocusEvent) );\n\t\taddEvent(focus_node,'focus',\t\t(e) => self.onFocus(e as MouseEvent) );\n\t\taddEvent(control_input,'paste',\t\t(e) => self.onPaste(e as MouseEvent) );\n\n\n\t\tconst doc_mousedown = (evt:Event) => {\n\n\t\t\t// blur if target is outside of this instance\n\t\t\t// dropdown is not always inside wrapper\n\t\t\tconst target = evt.composedPath()[0];\n\t\t\tif( !wrapper.contains(target as HTMLElement) && !dropdown.contains(target as HTMLElement) ){\n\t\t\t\tif (self.isFocused) {\n\t\t\t\t\tself.blur();\n\t\t\t\t}\n\t\t\t\tself.inputState();\n\t\t\t\treturn;\n\t\t\t}\n\n\n\t\t\t// retain focus by preventing native handling. if the\n\t\t\t// event target is the input it should not be modified.\n\t\t\t// otherwise, text selection within the input won't work.\n\t\t\t// Fixes bug #212 which is no covered by tests\n\t\t\tif( target == control_input && self.isOpen ){\n\t\t\t\tevt.stopPropagation();\n\n\t\t\t// clicking anywhere in the control should not blur the control_input (which would close the dropdown)\n\t\t\t}else{\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t}\n\n\t\t};\n\n\t\tconst win_scroll = () => {\n\t\t\tif (self.isOpen) {\n\t\t\t\tself.positionDropdown();\n\t\t\t}\n\t\t};\n\n\n\t\taddEvent(document,'mousedown', doc_mousedown);\n\t\taddEvent(window,'scroll', win_scroll, passive_event);\n\t\taddEvent(window,'resize', win_scroll, passive_event);\n\n\t\tthis._destroy = () => {\n\t\t\tdocument.removeEventListener('mousedown',doc_mousedown);\n\t\t\twindow.removeEventListener('scroll',win_scroll);\n\t\t\twindow.removeEventListener('resize',win_scroll);\n\t\t\tif( label ) label.removeEventListener('click',label_click);\n\t\t};\n\n\t\t// store original html and tab index so that they can be\n\t\t// restored when the destroy() method is called.\n\t\tthis.revertSettings = {\n\t\t\tinnerHTML : input.innerHTML,\n\t\t\ttabIndex : input.tabIndex\n\t\t};\n\n\n\t\tinput.tabIndex = -1;\n\t\tinput.insertAdjacentElement('afterend', self.wrapper);\n\n\t\tself.sync(false);\n\t\tsettings.items = [];\n\t\tdelete settings.optgroups;\n\t\tdelete settings.options;\n\n\t\taddEvent(input,'invalid', () => {\n\t\t\tif( self.isValid ){\n\t\t\t\tself.isValid = false;\n\t\t\t\tself.isInvalid = true;\n\t\t\t\tself.refreshState();\n\t\t\t}\n\t\t});\n\n\t\tself.updateOriginalInput();\n\t\tself.refreshItems();\n\t\tself.close(false);\n\t\tself.inputState();\n\t\tself.isSetup = true;\n\n\t\tif( input.disabled ){\n\t\t\tself.disable();\n\t\t}else if( input.readOnly ){\n\t\t\tself.setReadOnly(true);\n\t\t}else{\n\t\t\tself.enable(); //sets tabIndex\n\t\t}\n\n\t\tself.on('change', this.onChange);\n\n\t\taddClasses(input,'tomselected','ts-hidden-accessible');\n\t\tself.trigger('initialize');\n\n\t\t// preload options\n\t\tif (settings.preload === true) {\n\t\t\tself.preload();\n\t\t}\n\n\t}\n\n\n\t/**\n\t * Register options and optgroups\n\t *\n\t */\n\tsetupOptions(options:TomOption[] = [], optgroups:TomOption[] = []){\n\n\t\t// build options table\n\t\tthis.addOptions(options);\n\n\n\t\t// build optgroup table\n\t\titerate( optgroups, (optgroup:TomOption) => {\n\t\t\tthis.registerOptionGroup(optgroup);\n\t\t});\n\t}\n\n\t/**\n\t * Sets up default rendering functions.\n\t */\n\tsetupTemplates() {\n\t\tvar self = this;\n\t\tvar field_label = self.settings.labelField;\n\t\tvar field_optgroup = self.settings.optgroupLabelField;\n\n\t\tvar templates = {\n\t\t\t'optgroup': (data:TomOption) => {\n\t\t\t\tlet optgroup = document.createElement('div');\n\t\t\t\toptgroup.className = 'optgroup';\n\t\t\t\toptgroup.appendChild(data.options);\n\t\t\t\treturn optgroup;\n\n\t\t\t},\n\t\t\t'optgroup_header': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div class=\"optgroup-header\">' + escape(data[field_optgroup]) + '</div>';\n\t\t\t},\n\t\t\t'option': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div>' + escape(data[field_label]) + '</div>';\n\t\t\t},\n\t\t\t'item': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div>' + escape(data[field_label]) + '</div>';\n\t\t\t},\n\t\t\t'option_create': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div class=\"create\">Add <strong>' + escape(data.input) + '</strong>&hellip;</div>';\n\t\t\t},\n\t\t\t'no_results':() => {\n\t\t\t\treturn '<div class=\"no-results\">No results found</div>';\n\t\t\t},\n\t\t\t'loading':() => {\n\t\t\t\treturn '<div class=\"spinner\"></div>';\n\t\t\t},\n\t\t\t'not_loading':() => {},\n\t\t\t'dropdown':() => {\n\t\t\t\treturn '<div></div>';\n\t\t\t}\n\t\t};\n\n\n\t\tself.settings.render = Object.assign({}, templates, self.settings.render);\n\t}\n\n\t/**\n\t * Maps fired events to callbacks provided\n\t * in the settings used when creating the control.\n\t */\n\tsetupCallbacks() {\n\t\tvar key, fn;\n\t\tvar callbacks:{[key:string]:string} = {\n\t\t\t'initialize'      : 'onInitialize',\n\t\t\t'change'          : 'onChange',\n\t\t\t'item_add'        : 'onItemAdd',\n\t\t\t'item_remove'     : 'onItemRemove',\n\t\t\t'item_select'     : 'onItemSelect',\n\t\t\t'clear'           : 'onClear',\n\t\t\t'option_add'      : 'onOptionAdd',\n\t\t\t'option_remove'   : 'onOptionRemove',\n\t\t\t'option_clear'    : 'onOptionClear',\n\t\t\t'optgroup_add'    : 'onOptionGroupAdd',\n\t\t\t'optgroup_remove' : 'onOptionGroupRemove',\n\t\t\t'optgroup_clear'  : 'onOptionGroupClear',\n\t\t\t'dropdown_open'   : 'onDropdownOpen',\n\t\t\t'dropdown_close'  : 'onDropdownClose',\n\t\t\t'type'            : 'onType',\n\t\t\t'load'            : 'onLoad',\n\t\t\t'focus'           : 'onFocus',\n\t\t\t'blur'            : 'onBlur'\n\t\t};\n\n\t\tfor (key in callbacks) {\n\n\t\t\tfn = this.settings[callbacks[key] as (keyof TomSettings)];\n\t\t\tif (fn) this.on(key, fn);\n\n\t\t}\n\t}\n\n\t/**\n\t * Sync the Tom Select instance with the original input or select\n\t *\n\t */\n\tsync(get_settings:boolean=true):void{\n\t\tconst self\t\t= this;\n\t\tconst settings\t= get_settings ? getSettings( self.input, {delimiter:self.settings.delimiter} as RecursivePartial<TomSettings> ) : self.settings;\n\n\t\tself.setupOptions(settings.options,settings.optgroups);\n\n\t\tself.setValue(settings.items||[],true); // silent prevents recursion\n\n\t\tself.lastQuery = null; // so updated options will be displayed in dropdown\n\t}\n\n\t/**\n\t * Triggered when the main control element\n\t * has a click event.\n\t *\n\t */\n\tonClick():void {\n\t\tvar self = this;\n\n\t\tif( self.activeItems.length > 0 ){\n\t\t\tself.clearActiveItems();\n\t\t\tself.focus();\n\t\t\treturn;\n\t\t}\n\n\t\tif( self.isFocused && self.isOpen ){\n\t\t\tself.blur();\n\t\t} else {\n\t\t\tself.focus();\n\t\t}\n\t}\n\n\t/**\n\t * @deprecated v1.7\n\t *\n\t */\n\tonMouseDown():void {}\n\n\t/**\n\t * Triggered when the value of the control has been changed.\n\t * This should propagate the event to the original DOM\n\t * input / select element.\n\t */\n\tonChange() {\n\t\ttriggerEvent(this.input, 'input');\n\t\ttriggerEvent(this.input, 'change');\n\t}\n\n\t/**\n\t * Triggered on <input> paste.\n\t *\n\t */\n\tonPaste(e:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tif( self.isInputHidden || self.isLocked ){\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\n\t\t// If a regex or string is included, this will split the pasted\n\t\t// input and create Items for each separate value\n\t\tif( !self.settings.splitOn ){\n\t\t\treturn;\n\t\t}\n\n\t\t// Wait for pasted text to be recognized in value\n\t\tsetTimeout(() => {\n\t\t\tvar pastedText = self.inputValue();\n\t\t\tif( !pastedText.match(self.settings.splitOn)){\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tvar splitInput = pastedText.trim().split(self.settings.splitOn);\n\t\t\titerate( splitInput, (piece:string) => {\n\n\t\t\t\tconst hash = hash_key(piece);\n\t\t\t\tif( hash ){\n\t\t\t\t\tif( this.options[piece] ){\n\t\t\t\t\t\tself.addItem(piece);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tself.createItem(piece);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}, 0);\n\n\t}\n\n\t/**\n\t * Triggered on <input> keypress.\n\t *\n\t */\n\tonKeyPress(e:KeyboardEvent):void {\n\t\tvar self = this;\n\t\tif(self.isLocked){\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\t\tvar character = String.fromCharCode(e.keyCode || e.which);\n\t\tif (self.settings.create && self.settings.mode === 'multi' && character === self.settings.delimiter) {\n\t\t\tself.createItem();\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t/**\n\t * Triggered on <input> keydown.\n\t *\n\t */\n\tonKeyDown(e:KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tself.ignoreHover = true;\n\n\t\tif (self.isLocked) {\n\t\t\tif (e.keyCode !== constants.KEY_TAB) {\n\t\t\t\tpreventDefault(e);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (e.keyCode) {\n\n\t\t\t// ctrl+A: select all\n\t\t\tcase constants.KEY_A:\n\t\t\t\tif( isKeyDown(constants.KEY_SHORTCUT,e) ){\n\t\t\t\t\tif( self.control_input.value == '' ){\n\t\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\t\tself.selectAll();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\t// esc: close dropdown\n\t\t\tcase constants.KEY_ESC:\n\t\t\t\tif (self.isOpen) {\n\t\t\t\t\tpreventDefault(e,true);\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\t\t\t\tself.clearActiveItems();\n\t\t\t\treturn;\n\n\t\t\t// down: open dropdown or move selection down\n\t\t\tcase constants.KEY_DOWN:\n\t\t\t\tif (!self.isOpen && self.hasOptions) {\n\t\t\t\t\tself.open();\n\t\t\t\t} else if (self.activeOption) {\n\t\t\t\t\tlet next = self.getAdjacent(self.activeOption, 1);\n\t\t\t\t\tif (next) self.setActiveOption(next);\n\t\t\t\t}\n\t\t\t\tpreventDefault(e);\n\t\t\t\treturn;\n\n\t\t\t// up: move selection up\n\t\t\tcase constants.KEY_UP:\n\t\t\t\tif (self.activeOption) {\n\t\t\t\t\tlet prev = self.getAdjacent(self.activeOption, -1);\n\t\t\t\t\tif (prev) self.setActiveOption(prev);\n\t\t\t\t}\n\t\t\t\tpreventDefault(e);\n\t\t\t\treturn;\n\n\t\t\t// return: select active option\n\t\t\tcase constants.KEY_RETURN:\n\t\t\t\tif( self.canSelect(self.activeOption) ){\n\t\t\t\t\tself.onOptionSelect(e,self.activeOption!);\n\t\t\t\t\tpreventDefault(e);\n\n\t\t\t\t// if the option_create=null, the dropdown might be closed\n\t\t\t\t}else if (self.settings.create && self.createItem()) {\n\t\t\t\t\tpreventDefault(e);\n\n\t\t\t\t// don't submit form when searching for a value\n\t\t\t\t}else if( document.activeElement == self.control_input && self.isOpen ){\n\t\t\t\t\tpreventDefault(e);\n\t\t\t\t}\n\n\t\t\t\treturn;\n\n\t\t\t// left: modifiy item selection to the left\n\t\t\tcase constants.KEY_LEFT:\n\t\t\t\tself.advanceSelection(-1, e);\n\t\t\t\treturn;\n\n\t\t\t// right: modifiy item selection to the right\n\t\t\tcase constants.KEY_RIGHT:\n\t\t\t\tself.advanceSelection(1, e);\n\t\t\t\treturn;\n\n\t\t\t// tab: select active option and/or create item\n\t\t\tcase constants.KEY_TAB:\n\n\t\t\t\tif( self.settings.selectOnTab ){\n\t\t\t\t\tif( self.canSelect(self.activeOption) ){\n\t\t\t\t\t\tself.onOptionSelect(e,self.activeOption!);\n\n\t\t\t\t\t\t// prevent default [tab] behaviour of jump to the next field\n\t\t\t\t\t\t// if select isFull, then the dropdown won't be open and [tab] will work normally\n\t\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\t}\n\t\t\t\t\tif (self.settings.create && self.createItem()) {\n\t\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn;\n\n\t\t\t// delete|backspace: delete items\n\t\t\tcase constants.KEY_BACKSPACE:\n\t\t\tcase constants.KEY_DELETE:\n\t\t\t\tself.deleteSelection(e);\n\t\t\t\treturn;\n\t\t}\n\n\t\t// don't enter text in the control_input when active items are selected\n\t\tif( self.isInputHidden && !isKeyDown(constants.KEY_SHORTCUT,e) ){\n\t\t\tpreventDefault(e);\n\t\t}\n\t}\n\n\t/**\n\t * Triggered on <input> keyup.\n\t *\n\t */\n\tonInput(e:MouseEvent|KeyboardEvent):void {\n\t\t\n\t\tif( this.isLocked ){\n\t\t\treturn;\n\t\t}\n\n\t\tconst value = this.inputValue();\n\t\tif( this.lastValue === value ) return;\n\t\tthis.lastValue = value;\n\t\t\n\t\tif( value == '' ){\n\t\t\tthis._onInput();\n\t\t\treturn;\n\t\t}\n\n\t\tif( this.refreshTimeout ){\n\t\t\tclearTimeout(this.refreshTimeout);\n\t\t}\n\n\t\tthis.refreshTimeout = timeout(()=> {\n\t\t\tthis.refreshTimeout = null;\n\t\t\tthis._onInput();\n\t\t}, this.settings.refreshThrottle);\n\t}\n\n\t_onInput():void {\n\t\tconst value = this.lastValue;\n\n\t\tif( this.settings.shouldLoad.call(this,value) ){\n\t\t\tthis.load(value);\n\t\t}\n\n\t\tthis.refreshOptions();\n\t\tthis.trigger('type', value);\n\t}\n\n\t/**\n\t * Triggered when the user rolls over\n\t * an option in the autocomplete dropdown menu.\n\t *\n\t */\n\tonOptionHover( evt:MouseEvent|KeyboardEvent, option:HTMLElement ):void{\n\t\tif( this.ignoreHover ) return;\n\t\tthis.setActiveOption(option, false);\n\t}\n\n\t/**\n\t * Triggered on <input> focus.\n\t *\n\t */\n\tonFocus(e?:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\t\tvar wasFocused = self.isFocused;\n\n\t\tif( self.isDisabled || self.isReadOnly ){\n\t\t\tself.blur();\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\n\t\tif (self.ignoreFocus) return;\n\t\tself.isFocused = true;\n\t\tif( self.settings.preload === 'focus' ) self.preload();\n\n\t\tif (!wasFocused) self.trigger('focus');\n\n\t\tif (!self.activeItems.length) {\n\t\t\tself.inputState();\n\t\t\tself.refreshOptions(!!self.settings.openOnFocus);\n\t\t}\n\n\t\tself.refreshState();\n\t}\n\n\t/**\n\t * Triggered on <input> blur.\n\t *\n\t */\n\tonBlur(e?:FocusEvent):void {\n\n\t\tif( document.hasFocus() === false ) return;\n\n\t\tvar self = this;\n\t\tif (!self.isFocused) return;\n\t\tself.isFocused = false;\n\t\tself.ignoreFocus = false;\n\n\t\tvar deactivate = () => {\n\t\t\tself.close();\n\t\t\tself.setActiveItem();\n\t\t\tself.setCaret(self.items.length);\n\t\t\tself.trigger('blur');\n\t\t};\n\n\t\tif (self.settings.create && self.settings.createOnBlur) {\n\t\t\tself.createItem(null, deactivate);\n\t\t} else {\n\t\t\tdeactivate();\n\t\t}\n\t}\n\n\n\t/**\n\t * Triggered when the user clicks on an option\n\t * in the autocomplete dropdown menu.\n\t *\n\t */\n\tonOptionSelect( evt:MouseEvent|KeyboardEvent, option:HTMLElement ){\n\t\tvar value, self = this;\n\n\n\t\t// should not be possible to trigger a option under a disabled optgroup\n\t\tif( option.parentElement && option.parentElement.matches('[data-disabled]') ){\n\t\t\treturn;\n\t\t}\n\n\n\t\tif( option.classList.contains('create') ){\n\t\t\tself.createItem(null, () => {\n\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tvalue = option.dataset.value;\n\t\t\tif (typeof value !== 'undefined') {\n\t\t\t\tself.lastQuery = null;\n\t\t\t\tself.addItem(value);\n\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\n\t\t\t\tif( !self.settings.hideSelected && evt.type && /click/.test(evt.type) ){\n\t\t\t\t\tself.setActiveOption(option);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Return true if the given option can be selected\n\t *\n\t */\n\tcanSelect(option:HTMLElement|null):boolean{\n\n\t\tif( this.isOpen && option && this.dropdown_content.contains(option) ) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Triggered when the user clicks on an item\n\t * that has been selected.\n\t *\n\t */\n\tonItemSelect( evt?:MouseEvent, item?:TomItem ):boolean{\n\t\tvar self = this;\n\n\t\tif( !self.isLocked && self.settings.mode === 'multi' ){\n\t\t\tpreventDefault(evt);\n\t\t\tself.setActiveItem(item, evt);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Determines whether or not to invoke\n\t * the user-provided option provider / loader\n\t *\n\t * Note, there is a subtle difference between\n\t * this.canLoad() and this.settings.shouldLoad();\n\t *\n\t *\t- settings.shouldLoad() is a user-input validator.\n\t *\tWhen false is returned, the not_loading template\n\t *\twill be added to the dropdown\n\t *\n\t *\t- canLoad() is lower level validator that checks\n\t * \tthe Tom Select instance. There is no inherent user\n\t *\tfeedback when canLoad returns false\n\t *\n\t */\n\tcanLoad(value:string):boolean{\n\n\t\tif( !this.settings.load ) return false;\n\t\tif( this.loadedSearches.hasOwnProperty(value) ) return false;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Invokes the user-provided option provider / loader.\n\t *\n\t */\n\tload(value:string):void {\n\t\tconst self = this;\n\n\t\tif( !self.canLoad(value) ) return;\n\n\t\taddClasses(self.wrapper,self.settings.loadingClass);\n\t\tself.loading++;\n\n\t\tconst callback = self.loadCallback.bind(self);\n\t\tself.settings.load.call(self, value, callback);\n\t}\n\n\t/**\n\t * Invoked by the user-provided option provider\n\t *\n\t */\n\tloadCallback( options:TomOption[], optgroups:TomOption[] ):void{\n\t\tconst self = this;\n\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\tself.lastQuery = null;\n\n\t\tself.clearActiveOption(); // when new results load, focus should be on first option\n\t\tself.setupOptions(options,optgroups);\n\n\t\tself.refreshOptions(self.isFocused && !self.isInputHidden);\n\n\t\tif (!self.loading) {\n\t\t\tremoveClasses(self.wrapper,self.settings.loadingClass);\n\t\t}\n\n\t\tself.trigger('load', options, optgroups);\n\t}\n\n\tpreload():void{\n\t\tvar classList = this.wrapper.classList;\n\t\tif( classList.contains('preloaded') ) return;\n\t\tclassList.add('preloaded');\n\t\tthis.load('');\n\t}\n\n\n\t/**\n\t * Sets the input field of the control to the specified value.\n\t *\n\t */\n\tsetTextboxValue(value:string = '') {\n\t\tvar input = this.control_input;\n\t\tvar changed = input.value !== value;\n\t\tif (changed) {\n\t\t\tinput.value = value;\n\t\t\ttriggerEvent(input,'update');\n\t\t\tthis.lastValue = value;\n\t\t}\n\t}\n\n\t/**\n\t * Returns the value of the control. If multiple items\n\t * can be selected (e.g. <select multiple>), this returns\n\t * an array. If only one item can be selected, this\n\t * returns a string.\n\t *\n\t */\n\tgetValue():string|string[] {\n\n\t\tif( this.is_select_tag && this.input.hasAttribute('multiple')) {\n\t\t\treturn this.items;\n\t\t}\n\n\t\treturn this.items.join(this.settings.delimiter);\n\t}\n\n\t/**\n\t * Resets the selected items to the given value.\n\t *\n\t */\n\tsetValue( value:string|string[], silent?:boolean ):void{\n\t\tvar events = silent ? [] : ['change'];\n\n\t\tdebounce_events(this, events,() => {\n\t\t\tthis.clear(silent);\n\t\t\tthis.addItems(value, silent);\n\t\t});\n\t}\n\n\n\t/**\n\t * Resets the number of max items to the given value\n\t *\n\t */\n\tsetMaxItems(value:null|number){\n\t\tif(value === 0) value = null; //reset to unlimited items.\n\t\tthis.settings.maxItems = value;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Sets the selected item.\n\t *\n\t */\n\tsetActiveItem( item?:TomItem, e?:MouseEvent|KeyboardEvent ){\n\t\tvar self = this;\n\t\tvar eventName;\n\t\tvar i, begin, end, swap;\n\t\tvar last;\n\n\t\tif (self.settings.mode === 'single') return;\n\n\t\t// clear the active selection\n\t\tif( !item ){\n\t\t\tself.clearActiveItems();\n\t\t\tif (self.isFocused) {\n\t\t\t\tself.inputState();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// modify selection\n\t\teventName = e && e.type.toLowerCase();\n\n\t\tif (eventName === 'click' && isKeyDown('shiftKey',e) && self.activeItems.length) {\n\t\t\tlast\t= self.getLastActive();\n\t\t\tbegin\t= Array.prototype.indexOf.call(self.control.children, last);\n\t\t\tend\t\t= Array.prototype.indexOf.call(self.control.children, item);\n\n\t\t\tif (begin > end) {\n\t\t\t\tswap  = begin;\n\t\t\t\tbegin = end;\n\t\t\t\tend   = swap;\n\t\t\t}\n\t\t\tfor (i = begin; i <= end; i++) {\n\t\t\t\titem = self.control.children[i] as TomItem;\n\t\t\t\tif (self.activeItems.indexOf(item) === -1) {\n\t\t\t\t\tself.setActiveItemClass(item);\n\t\t\t\t}\n\t\t\t}\n\t\t\tpreventDefault(e);\n\t\t} else if ((eventName === 'click' && isKeyDown(constants.KEY_SHORTCUT,e) ) || (eventName === 'keydown' && isKeyDown('shiftKey',e))) {\n\t\t\tif( item.classList.contains('active') ){\n\t\t\t\tself.removeActiveItem( item );\n\t\t\t} else {\n\t\t\t\tself.setActiveItemClass(item);\n\t\t\t}\n\t\t} else {\n\t\t\tself.clearActiveItems();\n\t\t\tself.setActiveItemClass(item);\n\t\t}\n\n\t\t// ensure control has focus\n\t\tself.inputState();\n\t\tif (!self.isFocused) {\n\t\t\tself.focus();\n\t\t}\n\t}\n\n\t/**\n\t * Set the active and last-active classes\n\t *\n\t */\n\tsetActiveItemClass( item:TomItem ){\n\t\tconst self = this;\n\t\tconst last_active = self.control.querySelector('.last-active');\n\t\tif( last_active ) removeClasses(last_active as HTMLElement,'last-active');\n\n\t\taddClasses(item,'active last-active');\n\t\tself.trigger('item_select', item);\n\t\tif( self.activeItems.indexOf(item) == -1 ){\n\t\t\tself.activeItems.push( item );\n\t\t}\n\t}\n\n\t/**\n\t * Remove active item\n\t *\n\t */\n\tremoveActiveItem( item:TomItem ){\n\t\tvar idx = this.activeItems.indexOf(item);\n\t\tthis.activeItems.splice(idx, 1);\n\t\tremoveClasses(item,'active');\n\t}\n\n\t/**\n\t * Clears all the active items\n\t *\n\t */\n\tclearActiveItems(){\n\t\tremoveClasses(this.activeItems,'active');\n\t\tthis.activeItems = [];\n\t}\n\n\t/**\n\t * Sets the selected item in the dropdown menu\n\t * of available options.\n\t *\n\t */\n\tsetActiveOption( option:null|HTMLElement,scroll:boolean=true ):void{\n\n\t\tif( option === this.activeOption ){\n\t\t\treturn;\n\t\t}\n\n\t\tthis.clearActiveOption();\n\t\tif( !option ) return;\n\n\t\tthis.activeOption = option;\n\t\tsetAttr(this.focus_node,{'aria-activedescendant':option.getAttribute('id')});\n\t\tsetAttr(option,{'aria-selected':'true'});\n\t\taddClasses(option,'active');\n\t\tif( scroll ) this.scrollToOption(option);\n\t}\n\n\t/**\n\t * Sets the dropdown_content scrollTop to display the option\n\t *\n\t */\n\tscrollToOption( option:null|HTMLElement, behavior?:string ):void{\n\n\t\tif( !option ) return;\n\n\t\tconst content\t\t= this.dropdown_content;\n\t\tconst height_menu\t= content.clientHeight;\n\t\tconst scrollTop\t\t= content.scrollTop || 0;\n\t\tconst height_item\t= option.offsetHeight;\n\t\tconst y\t\t\t\t= option.getBoundingClientRect().top - content.getBoundingClientRect().top + scrollTop;\n\n\t\tif (y + height_item > height_menu + scrollTop) {\n\t\t\tthis.scroll(y - height_menu + height_item, behavior);\n\n\t\t} else if (y < scrollTop) {\n\t\t\tthis.scroll(y, behavior);\n\t\t}\n\t}\n\n\t/**\n\t * Scroll the dropdown to the given position\n\t *\n\t */\n\tscroll( scrollTop:number, behavior?:string ):void{\n\t\tconst content = this.dropdown_content;\n\t\tif( behavior ){\n\t\t\tcontent.style.scrollBehavior = behavior;\n\t\t}\n\t\tcontent.scrollTop = scrollTop;\n\t\tcontent.style.scrollBehavior = '';\n\t}\n\n\t/**\n\t * Clears the active option\n\t *\n\t */\n\tclearActiveOption(){\n\t\tif( this.activeOption ){\n\t\t\tremoveClasses(this.activeOption,'active');\n\t\t\tsetAttr(this.activeOption,{'aria-selected':null});\n\t\t}\n\t\tthis.activeOption = null;\n\t\tsetAttr(this.focus_node,{'aria-activedescendant':null});\n\t}\n\n\n\t/**\n\t * Selects all items (CTRL + A).\n\t */\n\tselectAll() {\n\t\tconst self = this;\n\n\t\tif (self.settings.mode === 'single') return;\n\n\t\tconst activeItems = self.controlChildren();\n\n\t\tif( !activeItems.length ) return;\n\n\t\tself.inputState();\n\t\tself.close();\n\n\t\tself.activeItems = activeItems;\n\t\titerate( activeItems, (item:TomItem) => {\n\t\t\tself.setActiveItemClass(item);\n\t\t});\n\n\t}\n\n\t/**\n\t * Determines if the control_input should be in a hidden or visible state\n\t *\n\t */\n\tinputState(){\n\t\tvar self = this;\n\n\t\tif( !self.control.contains(self.control_input) ) return;\n\n\t\tsetAttr(self.control_input,{placeholder:self.settings.placeholder});\n\n\t\tif( self.activeItems.length > 0 || (!self.isFocused && self.settings.hidePlaceholder && self.items.length > 0) ){\n\t\t\tself.setTextboxValue();\n\t\t\tself.isInputHidden = true;\n\n\t\t}else{\n\n\t\t\tif( self.settings.hidePlaceholder && self.items.length > 0 ){\n\t\t\t\tsetAttr(self.control_input,{placeholder:''});\n\t\t\t}\n\t\t\tself.isInputHidden = false;\n\t\t}\n\n\t\tself.wrapper.classList.toggle('input-hidden', self.isInputHidden );\n\t}\n\n\t/**\n\t * Get the input value\n\t */\n\tinputValue(){\n\t\treturn this.control_input.value.trim();\n\t}\n\n\t/**\n\t * Gives the control focus.\n\t */\n\tfocus() {\n\t\tvar self = this;\n\t\tif( self.isDisabled || self.isReadOnly) return;\n\n\t\tself.ignoreFocus = true;\n\n\t\tif( self.control_input.offsetWidth ){\n\t\t\tself.control_input.focus();\n\t\t}else{\n\t\t\tself.focus_node.focus();\n\t\t}\n\n\t\tsetTimeout(() => {\n\t\t\tself.ignoreFocus = false;\n\t\t\tself.onFocus();\n\t\t}, 0);\n\t}\n\n\t/**\n\t * Forces the control out of focus.\n\t *\n\t */\n\tblur():void {\n\t\tthis.focus_node.blur();\n\t\tthis.onBlur();\n\t}\n\n\t/**\n\t * Returns a function that scores an object\n\t * to show how good of a match it is to the\n\t * provided query.\n\t *\n\t * @return {function}\n\t */\n\tgetScoreFunction(query:string) {\n\t\treturn this.sifter.getScoreFunction(query, this.getSearchOptions());\n\t}\n\n\t/**\n\t * Returns search options for sifter (the system\n\t * for scoring and sorting results).\n\t *\n\t * @see https://github.com/orchidjs/sifter.js\n\t * @return {object}\n\t */\n\tgetSearchOptions() {\n\t\tvar settings = this.settings;\n\t\tvar sort = settings.sortField;\n\t\tif (typeof settings.sortField === 'string') {\n\t\t\tsort = [{field: settings.sortField}];\n\t\t}\n\n\t\treturn {\n\t\t\tfields      : settings.searchField,\n\t\t\tconjunction : settings.searchConjunction,\n\t\t\tsort        : sort,\n\t\t\tnesting     : settings.nesting\n\t\t};\n\t}\n\n\t/**\n\t * Searches through available options and returns\n\t * a sorted array of matches.\n\t *\n\t */\n\tsearch(query:string) : ReturnType<Sifter['search']>{\n\t\tvar result, calculateScore;\n\t\tvar self     = this;\n\t\tvar options  = this.getSearchOptions();\n\n\t\t// validate user-provided result scoring function\n\t\tif ( self.settings.score ){\n\t\t\tcalculateScore = self.settings.score.call(self,query);\n\t\t\tif (typeof calculateScore !== 'function') {\n\t\t\t\tthrow new Error('Tom Select \"score\" setting must be a function that returns a function');\n\t\t\t}\n\t\t}\n\n\t\t// perform search\n\t\tif (query !== self.lastQuery) {\n\t\t\tself.lastQuery\t\t\t= query;\n\t\t\tresult\t\t\t\t\t= self.sifter.search(query, Object.assign(options, {score: calculateScore}));\n\t\t\tself.currentResults\t\t= result;\n\t\t} else {\n\t\t\tresult\t\t\t\t\t= Object.assign( {}, self.currentResults);\n\t\t}\n\n\t\t// filter out selected items\n\t\tif( self.settings.hideSelected ){\n\t\t\tresult.items = result.items.filter((item) => {\n\t\t\t\tlet hashed = hash_key(item.id);\n\t\t\t\treturn !(hashed && self.items.indexOf(hashed) !== -1 );\n\t\t\t});\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Refreshes the list of available options shown\n\t * in the autocomplete dropdown menu.\n\t *\n\t */\n\trefreshOptions( triggerDropdown:boolean = true ){\n\t\tvar i, j, k, n, optgroup, optgroups, html:DocumentFragment, has_create_option, active_group;\n\t\tvar create;\n\n\t\ttype Group = {fragment:DocumentFragment,order:number,optgroup:string}\n\t\tconst groups: {[key:string]:number} = {};\n\t\tconst groups_order:Group[]\t= [];\n\n\t\tvar self\t\t\t\t\t= this;\n\t\tvar query\t\t\t\t\t= self.inputValue();\n\t\tconst same_query\t\t\t= query === self.lastQuery || (query == '' && self.lastQuery == null);\n\t\tvar results\t\t\t\t\t= self.search(query);\n\t\tvar active_option:HTMLElement|null = null;\n\t\tvar show_dropdown\t\t\t= self.settings.shouldOpen || false;\n\t\tvar dropdown_content\t\t= self.dropdown_content;\n\n\n\t\tif( same_query ){\n\t\t\tactive_option\t\t\t= self.activeOption;\n\n\t\t\tif( active_option ){\n\t\t\t\tactive_group = active_option.closest('[data-group]') as HTMLElement;\n\t\t\t}\n\t\t}\n\n\t\t// build markup\n\t\tn = results.items.length;\n\t\tif (typeof self.settings.maxOptions === 'number') {\n\t\t\tn = Math.min(n, self.settings.maxOptions);\n\t\t}\n\n\t\tif( n > 0 ){\n\t\t\tshow_dropdown = true;\n\t\t}\n\n\t\t// get fragment for group and the position of the group in group_order\n\t\tconst getGroupFragment = (optgroup:string,order:number):[number,DocumentFragment] => {\n\n\t\t\tlet group_order_i = groups[optgroup];\n\n\t\t\tif( group_order_i !== undefined ){\n\t\t\t\tlet order_group = groups_order[group_order_i];\n\t\t\t\tif( order_group !== undefined ){\n\t\t\t\t\treturn [group_order_i,order_group.fragment];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet group_fragment = document.createDocumentFragment();\n\t\t\tgroup_order_i = groups_order.length;\n\t\t\tgroups_order.push({fragment:group_fragment,order,optgroup});\n\n\t\t\treturn [group_order_i,group_fragment]\n\t\t}\n\n\t\t// render and group available options individually\n\t\tfor (i = 0; i < n; i++) {\n\n\t\t\t// get option dom element\n\t\t\tlet item\t\t\t= results.items[i];\n\t\t\tif( !item ) continue;\n\n\t\t\tlet opt_value\t\t= item.id;\n\t\t\tlet option\t\t\t= self.options[opt_value];\n\n\t\t\tif( option === undefined ) continue;\n\n\t\t\tlet opt_hash\t\t= get_hash(opt_value);\n\t\t\tlet option_el\t\t= self.getOption(opt_hash,true) as HTMLElement;\n\n\t\t\t// toggle 'selected' class\n\t\t\tif( !self.settings.hideSelected ){\n\t\t\t\toption_el.classList.toggle('selected', self.items.includes(opt_hash) );\n\t\t\t}\n\n\t\t\toptgroup    = option[self.settings.optgroupField] || '';\n\t\t\toptgroups   = Array.isArray(optgroup) ? optgroup : [optgroup];\n\t\t\t\n\n\t\t\tfor (j = 0, k = optgroups && optgroups.length; j < k; j++) {\n\t\t\t\toptgroup = optgroups[j];\n\n\t\t\t\tlet order = option.$order;\n\t\t\t\tlet self_optgroup = self.optgroups[optgroup];\n\t\t\t\tif( self_optgroup === undefined ){\t\t\t\t\t\n\t\t\t\t\toptgroup = '';\n\t\t\t\t}else{\n\t\t\t\t\torder = self_optgroup.$order;\n\t\t\t\t}\n\n\t\t\t\tconst [group_order_i,group_fragment] = getGroupFragment(optgroup,order);\n\n\n\t\t\t\t// nodes can only have one parent, so if the option is in mutple groups, we need a clone\n\t\t\t\tif( j > 0 ){\n\t\t\t\t\toption_el = option_el.cloneNode(true) as HTMLElement;\n\t\t\t\t\tsetAttr(option_el,{id: option.$id+'-clone-'+j,'aria-selected':null});\n\t\t\t\t\toption_el.classList.add('ts-cloned');\n\t\t\t\t\tremoveClasses(option_el,'active');\n\n\n\t\t\t\t\t// make sure we keep the activeOption in the same group\n\t\t\t\t\tif( self.activeOption && self.activeOption.dataset.value == opt_value ){\n\t\t\t\t\t\tif( active_group && active_group.dataset.group === optgroup.toString() ){\n\t\t\t\t\t\t\tactive_option = option_el;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\t\n\t\t\t\t\n\t\t\t\tgroup_fragment.appendChild(option_el);\n\t\t\t\tif( optgroup != '' ){\n\t\t\t\t\tgroups[optgroup] = group_order_i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// sort optgroups\n\t\tif( self.settings.lockOptgroupOrder ){\n\t\t\tgroups_order.sort((a, b) => {\n\t\t\t\treturn a.order - b.order;\n\t\t\t});\n\t\t}\n\n\t\t// render optgroup headers & join groups\n\t\thtml = document.createDocumentFragment();\n\t\titerate( groups_order, (group_order:Group) => {\n\n\t\t\tlet group_fragment = group_order.fragment;\n\t\t\tlet optgroup = group_order.optgroup\n\n\t\t\tif( !group_fragment || !group_fragment.children.length ) return;\n\n\t\t\tlet group_heading = self.optgroups[optgroup];\n\n\t\t\tif( group_heading !== undefined ){\n\n\t\t\t\tlet group_options = document.createDocumentFragment();\n\t\t\t\tlet header = self.render('optgroup_header', group_heading);\n\t\t\t\tappend( group_options, header );\n\t\t\t\tappend( group_options, group_fragment );\n\n\t\t\t\tlet group_html = self.render('optgroup', {group:group_heading,options:group_options} );\n\n\t\t\t\tappend( html, group_html );\n\n\t\t\t} else {\n\t\t\t\tappend( html, group_fragment );\n\t\t\t}\n\t\t});\n\n\t\tdropdown_content.innerHTML = '';\n\t\tappend( dropdown_content, html );\n\n\t\t// highlight matching terms inline\n\t\tif (self.settings.highlight) {\n\t\t\tremoveHighlight( dropdown_content );\n\t\t\tif (results.query.length && results.tokens.length) {\n\t\t\t\titerate( results.tokens, (tok) => {\n\t\t\t\t\thighlight( dropdown_content, tok.regex);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t// helper method for adding templates to dropdown\n\t\tvar add_template = (template:TomTemplateNames) => {\n\t\t\tlet content = self.render(template,{input:query});\n\t\t\tif( content ){\n\t\t\t\tshow_dropdown = true;\n\t\t\t\tdropdown_content.insertBefore(content, dropdown_content.firstChild);\n\t\t\t}\n\t\t\treturn content;\n\t\t};\n\n\n\t\t// add loading message\n\t\tif( self.loading ){\n\t\t\tadd_template('loading');\n\n\t\t// invalid query\n\t\t}else if( !self.settings.shouldLoad.call(self,query) ){\n\t\t\tadd_template('not_loading');\n\n\t\t// add no_results message\n\t\t}else if( results.items.length === 0 ){\n\t\t\tadd_template('no_results');\n\n\t\t}\n\n\n\n\t\t// add create option\n\t\thas_create_option = self.canCreate(query);\n\t\tif (has_create_option) {\n\t\t\tcreate = add_template('option_create');\n\t\t}\n\n\n\t\t// activate\n\t\tself.hasOptions = results.items.length > 0 || has_create_option;\n\t\tif( show_dropdown ){\n\n\t\t\tif (results.items.length > 0) {\n\n\t\t\t\tif( !active_option && self.settings.mode === 'single' && self.items[0] != undefined ){\n\t\t\t\t\tactive_option = self.getOption(self.items[0]);\n\t\t\t\t}\n\n\t\t\t\tif( !dropdown_content.contains(active_option)  ){\n\n\t\t\t\t\tlet active_index = 0;\n\t\t\t\t\tif( create && !self.settings.addPrecedence ){\n\t\t\t\t\t\tactive_index = 1;\n\t\t\t\t\t}\n\t\t\t\t\tactive_option = self.selectable()[active_index] as HTMLElement;\n\t\t\t\t}\n\n\t\t\t}else if( create ){\n\t\t\t\tactive_option = create;\n\t\t\t}\n\n\t\t\tif( triggerDropdown && !self.isOpen ){\n\t\t\t\tself.open();\n\t\t\t\tself.scrollToOption(active_option,'auto');\n\t\t\t}\n\t\t\tself.setActiveOption(active_option);\n\n\t\t}else{\n\t\t\tself.clearActiveOption();\n\t\t\tif( triggerDropdown && self.isOpen ){\n\t\t\t\tself.close(false); // if create_option=null, we want the dropdown to close but not reset the textbox value\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Return list of selectable options\n\t *\n\t */\n\tselectable():NodeList{\n\t\treturn this.dropdown_content.querySelectorAll('[data-selectable]');\n\t}\n\n\n\n\t/**\n\t * Adds an available option. If it already exists,\n\t * nothing will happen. Note: this does not refresh\n\t * the options list dropdown (use `refreshOptions`\n\t * for that).\n\t *\n\t * Usage:\n\t *\n\t *   this.addOption(data)\n\t *\n\t */\n\taddOption( data:TomOption, user_created = false ):false|string {\n\t\tconst self = this;\n\n\t\t// @deprecated 1.7.7\n\t\t// use addOptions( array, user_created ) for adding multiple options\n\t\tif( Array.isArray(data) ){\n\t\t\tself.addOptions( data, user_created);\n\t\t\treturn false;\n\t\t}\n\n\t\tconst key = hash_key(data[self.settings.valueField]);\n\t\tif( key === null || self.options.hasOwnProperty(key) ){\n\t\t\treturn false;\n\t\t}\n\n\t\tdata.$order\t\t\t= data.$order || ++self.order;\n\t\tdata.$id\t\t\t= self.inputId + '-opt-' + data.$order;\n\t\tself.options[key]\t= data;\n\t\tself.lastQuery\t\t= null;\n\n\t\tif( user_created ){\n\t\t\tself.userOptions[key] = user_created;\n\t\t\tself.trigger('option_add', key, data);\n\t\t}\n\n\t\treturn key;\n\t}\n\n\t/**\n\t * Add multiple options\n\t *\n\t */\n\taddOptions( data:TomOption[], user_created = false ):void{\n\t\titerate( data, (dat:TomOption) => {\n\t\t\tthis.addOption(dat, user_created);\n\t\t});\n\t}\n\n\t/**\n\t * @deprecated 1.7.7\n\t */\n\tregisterOption( data:TomOption ):false|string {\n\t\treturn this.addOption(data);\n\t}\n\n\t/**\n\t * Registers an option group to the pool of option groups.\n\t *\n\t * @return {boolean|string}\n\t */\n\tregisterOptionGroup(data:TomOption) {\n\t\tvar key = hash_key(data[this.settings.optgroupValueField]);\n\n\t\tif ( key === null ) return false;\n\n\t\tdata.$order = data.$order || ++this.order;\n\t\tthis.optgroups[key] = data;\n\t\treturn key;\n\t}\n\n\t/**\n\t * Registers a new optgroup for options\n\t * to be bucketed into.\n\t *\n\t */\n\taddOptionGroup(id:string, data:TomOption) {\n\t\tvar hashed_id;\n\t\tdata[this.settings.optgroupValueField] = id;\n\n\t\tif( hashed_id = this.registerOptionGroup(data) ){\n\t\t\tthis.trigger('optgroup_add', hashed_id, data);\n\t\t}\n\t}\n\n\t/**\n\t * Removes an existing option group.\n\t *\n\t */\n\tremoveOptionGroup(id:string) {\n\t\tif (this.optgroups.hasOwnProperty(id)) {\n\t\t\tdelete this.optgroups[id];\n\t\t\tthis.clearCache();\n\t\t\tthis.trigger('optgroup_remove', id);\n\t\t}\n\t}\n\n\t/**\n\t * Clears all existing option groups.\n\t */\n\tclearOptionGroups() {\n\t\tthis.optgroups = {};\n\t\tthis.clearCache();\n\t\tthis.trigger('optgroup_clear');\n\t}\n\n\t/**\n\t * Updates an option available for selection. If\n\t * it is visible in the selected items or options\n\t * dropdown, it will be re-rendered automatically.\n\t *\n\t */\n\tupdateOption(value:string, data:TomOption) {\n\t\tconst self = this;\n\t\tvar item_new;\n\t\tvar index_item;\n\n\t\tconst value_old\t\t= hash_key(value);\n\t\tconst value_new\t\t= hash_key(data[self.settings.valueField]);\n\n\t\t// sanity checks\n\t\tif( value_old === null ) return;\n\n\t\tconst data_old\t\t= self.options[value_old];\n\n\t\tif( data_old == undefined ) return;\n\t\tif( typeof value_new !== 'string' ) throw new Error('Value must be set in option data');\n\n\n\t\tconst option\t\t= self.getOption(value_old);\n\t\tconst item\t\t\t= self.getItem(value_old);\n\n\n\t\tdata.$order = data.$order || data_old.$order;\n\t\tdelete self.options[value_old];\n\n\t\t// invalidate render cache\n\t\t// don't remove existing node yet, we'll remove it after replacing it\n\t\tself.uncacheValue(value_new);\n\n\t\tself.options[value_new] = data;\n\n\t\t// update the option if it's in the dropdown\n\t\tif( option ){\n\t\t\tif( self.dropdown_content.contains(option) ){\n\n\t\t\t\tconst option_new\t= self._render('option', data);\n\t\t\t\treplaceNode(option, option_new);\n\n\t\t\t\tif( self.activeOption === option ){\n\t\t\t\t\tself.setActiveOption(option_new);\n\t\t\t\t}\n\t\t\t}\n\t\t\toption.remove();\n\t\t}\n\n\t\t// update the item if we have one\n\t\tif( item ){\n\t\t\tindex_item = self.items.indexOf(value_old);\n\t\t\tif (index_item !== -1) {\n\t\t\t\tself.items.splice(index_item, 1, value_new);\n\t\t\t}\n\n\t\t\titem_new\t= self._render('item', data);\n\n\t\t\tif( item.classList.contains('active') ) addClasses(item_new,'active');\n\n\t\t\treplaceNode( item, item_new);\n\t\t}\n\n\t\t// invalidate last query because we might have updated the sortField\n\t\tself.lastQuery = null;\n\t}\n\n\t/**\n\t * Removes a single option.\n\t *\n\t */\n\tremoveOption(value:string, silent?:boolean):void {\n\t\tconst self = this;\n\t\tvalue = get_hash(value);\n\n\t\tself.uncacheValue(value);\n\n\t\tdelete self.userOptions[value];\n\t\tdelete self.options[value];\n\t\tself.lastQuery = null;\n\t\tself.trigger('option_remove', value);\n\t\tself.removeItem(value, silent);\n\t}\n\n\t/**\n\t * Clears all options.\n\t */\n\tclearOptions(filter?:TomClearFilter ) {\n\n\t\tconst boundFilter = (filter || this.clearFilter).bind(this);\n\n\t\tthis.loadedSearches\t\t= {};\n\t\tthis.userOptions\t\t= {};\n\t\tthis.clearCache();\n\n\t\tconst selected:TomOptions\t= {};\n\t\titerate(this.options,(option:TomOption,key:string)=>{\n\t\t\tif( boundFilter(option,key as string) ){\n\t\t\t\tselected[key] = option;\n\t\t\t}\n\t\t});\n\n\t\tthis.options = this.sifter.items = selected;\n\t\tthis.lastQuery = null;\n\t\tthis.trigger('option_clear');\n\t}\n\n\t/**\n\t * Used by clearOptions() to decide whether or not an option should be removed\n\t * Return true to keep an option, false to remove\n\t *\n\t */\n\tclearFilter(option:TomOption,value:string){\n\t\tif( this.items.indexOf(value) >= 0 ){\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns the dom element of the option\n\t * matching the given value.\n\t *\n\t */\n\tgetOption(value:undefined|null|boolean|string|number, create:boolean=false):null|HTMLElement {\n\n\t\tconst hashed = hash_key(value);\n\t\tif( hashed === null ) return null;\n\n\t\tconst option = this.options[hashed];\n\t\tif( option != undefined ){\n\n\t\t\tif( option.$div ){\n\t\t\t\treturn option.$div;\n\t\t\t}\n\n\t\t\tif( create ){\n\t\t\t\treturn this._render('option', option);\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the dom element of the next or previous dom element of the same type\n\t * Note: adjacent options may not be adjacent DOM elements (optgroups)\n\t *\n\t */\n\tgetAdjacent( option:null|HTMLElement, direction:number, type:string = 'option' ) : HTMLElement|null{\n\t\tvar self = this, all;\n\n\t\tif( !option ){\n\t\t\treturn null;\n\t\t}\n\n\t\tif( type == 'item' ){\n\t\t\tall\t\t\t= self.controlChildren();\n\t\t}else{\n\t\t\tall\t\t\t= self.dropdown_content.querySelectorAll('[data-selectable]');\n\t\t}\n\n\t\tfor( let i = 0; i < all.length; i++ ){\n\t\t\tif( all[i] != option ){\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif( direction > 0 ){\n\t\t\t\treturn all[i+1] as HTMLElement;\n\t\t\t}\n\n\t\t\treturn all[i-1] as HTMLElement;\n\t\t}\n\t\treturn null;\n\t}\n\n\n\t/**\n\t * Returns the dom element of the item\n\t * matching the given value.\n\t *\n\t */\n\tgetItem(item:string|TomItem|null):null|TomItem {\n\n\t\tif( typeof item == 'object' ){\n\t\t\treturn item;\n\t\t}\n\n\t\tvar value = hash_key(item);\n\t\treturn value !== null\n\t\t\t? this.control.querySelector(`[data-value=\"${addSlashes(value)}\"]`)\n\t\t\t: null;\n\t}\n\n\t/**\n\t * \"Selects\" multiple items at once. Adds them to the list\n\t * at the current caret position.\n\t *\n\t */\n\taddItems( values:string|string[], silent?:boolean ):void{\n\t\tvar self = this;\n\n\t\tvar items = Array.isArray(values) ? values : [values];\n\t\titems = items.filter(x => self.items.indexOf(x) === -1);\n\t\tconst last_item = items[items.length - 1];\n\t\titems.forEach(item => {\n\t\t\tself.isPending = (item !== last_item);\n\t\t\tself.addItem(item, silent);\n\t\t});\n\t}\n\n\t/**\n\t * \"Selects\" an item. Adds it to the list\n\t * at the current caret position.\n\t *\n\t */\n\taddItem( value:string, silent?:boolean ):void{\n\t\tvar events = silent ? [] : ['change','dropdown_close'];\n\n\t\tdebounce_events(this, events, () => {\n\t\t\tvar item, wasFull;\n\t\t\tconst self = this;\n\t\t \tconst inputMode = self.settings.mode;\n\t\t\tconst hashed = hash_key(value);\n\n\t\t\tif( hashed && self.items.indexOf(hashed) !== -1 ){\n\n\t\t\t\tif( inputMode === 'single' ){\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\n\t\t\t\tif( inputMode === 'single' || !self.settings.duplicates ){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (hashed === null || !self.options.hasOwnProperty(hashed)) return;\n\t\t\tif (inputMode === 'single') self.clear(silent);\n\t\t\tif (inputMode === 'multi' && self.isFull()) return;\n\n\t\t\titem = self._render('item', self.options[hashed]);\n\n\t\t\tif( self.control.contains(item) ){ // duplicates\n\t\t\t\titem = item.cloneNode(true) as HTMLElement;\n\t\t\t}\n\n\t\t\twasFull = self.isFull();\n\t\t\tself.items.splice(self.caretPos, 0, hashed);\n\t\t\tself.insertAtCaret(item);\n\n\t\t\tif (self.isSetup) {\n\n\t\t\t\t// update menu / remove the option (if this is not one item being added as part of series)\n\t\t\t\tif( !self.isPending && self.settings.hideSelected ){\n\t\t\t\t\tlet option = self.getOption(hashed);\n\t\t\t\t\tlet next = self.getAdjacent(option, 1);\n\t\t\t\t\tif( next ){\n\t\t\t\t\t\tself.setActiveOption(next);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// refreshOptions after setActiveOption(),\n\t\t\t\t// otherwise setActiveOption() will be called by refreshOptions() with the wrong value\n\t\t\t\tif( !self.isPending && !self.settings.closeAfterSelect ){\n\t\t\t\t\tself.refreshOptions(self.isFocused && inputMode !== 'single');\n\t\t\t\t}\n\n\t\t\t\t// hide the menu if the maximum number of items have been selected or no options are left\n\t\t\t\tif( self.settings.closeAfterSelect != false && self.isFull() ){\n\t\t\t\t\tself.close();\n\t\t\t\t} else if (!self.isPending) {\n\t\t\t\t\tself.positionDropdown();\n\t\t\t\t}\n\n\t\t\t\tself.trigger('item_add', hashed, item);\n\n\t\t\t\tif (!self.isPending) {\n\t\t\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!self.isPending || (!wasFull && self.isFull())) {\n\t\t\t\tself.inputState();\n\t\t\t\tself.refreshState();\n\t\t\t}\n\n\t\t});\n\t}\n\n\t/**\n\t * Removes the selected item matching\n\t * the provided value.\n\t *\n\t */\n\tremoveItem( item:string|TomItem|null=null, silent?:boolean ){\n\t\tconst self\t\t= this;\n\t\titem\t\t\t= self.getItem(item);\n\n\t\tif( !item ) return;\n\n\t\tvar i,idx;\n\t\tconst value\t= item.dataset.value;\n\t\ti = nodeIndex(item);\n\n\t\titem.remove();\n\t\tif( item.classList.contains('active') ){\n\t\t\tidx = self.activeItems.indexOf(item);\n\t\t\tself.activeItems.splice(idx, 1);\n\t\t\tremoveClasses(item,'active');\n\t\t}\n\n\t\tself.items.splice(i, 1);\n\t\tself.lastQuery = null;\n\t\tif (!self.settings.persist && self.userOptions.hasOwnProperty(value)) {\n\t\t\tself.removeOption(value, silent);\n\t\t}\n\n\t\tif (i < self.caretPos) {\n\t\t\tself.setCaret(self.caretPos - 1);\n\t\t}\n\n\t\tself.updateOriginalInput({silent: silent});\n\t\tself.refreshState();\n\t\tself.positionDropdown();\n\t\tself.trigger('item_remove', value, item);\n\n\t}\n\n\t/**\n\t * Invokes the `create` method provided in the\n\t * TomSelect options that should provide the data\n\t * for the new item, given the user input.\n\t *\n\t * Once this completes, it will be added\n\t * to the item list.\n\t *\n\t */\n\tcreateItem( input:null|string=null, callback:TomCreateCallback = ()=>{} ):boolean{\n\n\t\t// triggerDropdown parameter @deprecated 2.1.1\n\t\tif( arguments.length === 3 ){\n\t\t\tcallback = arguments[2];\n\t\t}\n\t\tif( typeof callback != 'function' ){\n\t\t\tcallback = () => {};\n\t\t}\n\n\t\tvar self  = this;\n\t\tvar caret = self.caretPos;\n\t\tvar output;\n\t\tinput = input || self.inputValue();\n\n\t\tif (!self.canCreate(input)) {\n\t\t\tcallback();\n\t\t\treturn false;\n\t\t}\n\n\t\tself.lock();\n\n\t\tvar created = false;\n\t\tvar create = (data?:boolean|TomOption) => {\n\t\t\tself.unlock();\n\n\t\t\tif (!data || typeof data !== 'object') return callback();\n\t\t\tvar value = hash_key(data[self.settings.valueField]);\n\t\t\tif( typeof value !== 'string' ){\n\t\t\t\treturn callback();\n\t\t\t}\n\n\t\t\tself.setTextboxValue();\n\t\t\tself.addOption(data,true);\n\t\t\tself.setCaret(caret);\n\t\t\tself.addItem(value);\n\t\t\tcallback(data);\n\t\t\tcreated = true;\n\t\t};\n\n\t\tif( typeof self.settings.create === 'function' ){\n\t\t\toutput = self.settings.create.call(this, input, create);\n\t\t}else{\n\t\t\toutput = {\n\t\t\t\t[self.settings.labelField]: input,\n\t\t\t\t[self.settings.valueField]: input,\n\t\t\t};\n\t\t}\n\n\t\tif( !created ){\n\t\t\tcreate(output);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Re-renders the selected item lists.\n\t */\n\trefreshItems() {\n\t\tvar self = this;\n\t\tself.lastQuery = null;\n\n\t\tif (self.isSetup) {\n\t\t\tself.addItems(self.items);\n\t\t}\n\n\t\tself.updateOriginalInput();\n\t\tself.refreshState();\n\t}\n\n\t/**\n\t * Updates all state-dependent attributes\n\t * and CSS classes.\n\t */\n\trefreshState() {\n\t\tconst self     = this;\n\n\t\tself.refreshValidityState();\n\n\t\tconst isFull\t= self.isFull();\n\t\tconst isLocked\t= self.isLocked;\n\n\t\tself.wrapper.classList.toggle('rtl',self.rtl);\n\n\n\t\tconst wrap_classList = self.wrapper.classList;\n\n\t\twrap_classList.toggle('focus', self.isFocused)\n\t\twrap_classList.toggle('disabled', self.isDisabled)\n\t\twrap_classList.toggle('readonly', self.isReadOnly)\n\t\twrap_classList.toggle('required', self.isRequired)\n\t\twrap_classList.toggle('invalid', !self.isValid)\n\t\twrap_classList.toggle('locked', isLocked)\n\t\twrap_classList.toggle('full', isFull)\n\t\twrap_classList.toggle('input-active', self.isFocused && !self.isInputHidden)\n\t\twrap_classList.toggle('dropdown-active', self.isOpen)\n\t\twrap_classList.toggle('has-options', isEmptyObject(self.options) )\n\t\twrap_classList.toggle('has-items', self.items.length > 0);\n\n\t}\n\n\n\t/**\n\t * Update the `required` attribute of both input and control input.\n\t *\n\t * The `required` property needs to be activated on the control input\n\t * for the error to be displayed at the right place. `required` also\n\t * needs to be temporarily deactivated on the input since the input is\n\t * hidden and can't show errors.\n\t */\n\trefreshValidityState() {\n\t\tvar self = this;\n\n\t\tif( !self.input.validity ){\n\t\t\treturn;\n\t\t}\n\n\t\tself.isValid = self.input.validity.valid;\n\t\tself.isInvalid = !self.isValid;\n\t}\n\n\t/**\n\t * Determines whether or not more items can be added\n\t * to the control without exceeding the user-defined maximum.\n\t *\n\t * @returns {boolean}\n\t */\n\tisFull() {\n\t\treturn this.settings.maxItems !== null && this.items.length >= this.settings.maxItems;\n\t}\n\n\t/**\n\t * Refreshes the original <select> or <input>\n\t * element to reflect the current state.\n\t *\n\t */\n\tupdateOriginalInput( opts:TomArgObject = {} ){\n\t\tconst self = this;\n\t\tvar option, label;\n\n\t\tconst empty_option = self.input.querySelector('option[value=\"\"]') as HTMLOptionElement;\n\n\t\tif( self.is_select_tag ){\n\n\t\t\tconst selected:HTMLOptionElement[]\t\t= [];\n\t\t\tconst has_selected:number\t\t\t\t= self.input.querySelectorAll('option:checked').length;\n\n\t\t\tfunction AddSelected(option_el:HTMLOptionElement|null, value:string, label:string):HTMLOptionElement{\n\n\t\t\t\tif( !option_el ){\n\t\t\t\t\toption_el = getDom('<option value=\"' + escape_html(value) + '\">' + escape_html(label) + '</option>') as HTMLOptionElement;\n\t\t\t\t}\n\n\t\t\t\t// don't move empty option from top of list\n\t\t\t\t// fixes bug in firefox https://bugzilla.mozilla.org/show_bug.cgi?id=1725293\n\t\t\t\tif( option_el != empty_option ){\n\t\t\t\t\tself.input.append(option_el);\n\t\t\t\t}\n\n\t\t\t\tselected.push(option_el);\n\n\t\t\t\t// marking empty option as selected can break validation\n\t\t\t\t// fixes https://github.com/orchidjs/tom-select/issues/303\n\t\t\t\tif( option_el != empty_option || has_selected > 0 ){\n\t\t\t\t\toption_el.selected = true;\n\t\t\t\t}\n\n\t\t\t\treturn option_el;\n\t\t\t}\n\n\t\t\t// unselect all selected options\n\t\t\tself.input.querySelectorAll('option:checked').forEach((option_el:Element) => {\n\t\t\t\t(<HTMLOptionElement>option_el).selected = false;\n\t\t\t});\n\n\n\t\t\t// nothing selected?\n\t\t\tif( self.items.length == 0 && self.settings.mode == 'single' ){\n\n\t\t\t\tAddSelected(empty_option, \"\", \"\");\n\n\t\t\t// order selected <option> tags for values in self.items\n\t\t\t}else{\n\n\t\t\t\tself.items.forEach((value)=>{\n\t\t\t\t\toption\t\t\t= self.options[value]!;\n\t\t\t\t\tlabel\t\t\t= option[self.settings.labelField] || '';\n\n\t\t\t\t\tif( selected.includes(option.$option) ){\n\t\t\t\t\t\tconst reuse_opt = self.input.querySelector(`option[value=\"${addSlashes(value)}\"]:not(:checked)`) as HTMLOptionElement;\n\t\t\t\t\t\tAddSelected(reuse_opt, value, label);\n\t\t\t\t\t}else{\n\t\t\t\t\t\toption.$option\t= AddSelected(option.$option, value, label);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t}\n\n\t\t} else {\n\t\t\tself.input.value = self.getValue() as string;\n\t\t}\n\n\t\tif (self.isSetup) {\n\t\t\tif (!opts.silent) {\n\t\t\t\tself.trigger('change', self.getValue() );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Shows the autocomplete dropdown containing\n\t * the available options.\n\t */\n\topen() {\n\t\tvar self = this;\n\n\t\tif (self.isLocked || self.isOpen || (self.settings.mode === 'multi' && self.isFull())) return;\n\t\tself.isOpen = true;\n\t\tsetAttr(self.focus_node,{'aria-expanded': 'true'});\n\t\tself.refreshState();\n\t\tapplyCSS(self.dropdown,{visibility: 'hidden', display: 'block'});\n\t\tself.positionDropdown();\n\t\tapplyCSS(self.dropdown,{visibility: 'visible', display: 'block'});\n\t\tself.focus();\n\t\tself.trigger('dropdown_open', self.dropdown);\n\t}\n\n\t/**\n\t * Closes the autocomplete dropdown menu.\n\t */\n\tclose(setTextboxValue=true) {\n\t\tvar self = this;\n\t\tvar trigger = self.isOpen;\n\n\t\tif( setTextboxValue ){\n\n\t\t\t// before blur() to prevent form onchange event\n\t\t\tself.setTextboxValue();\n\n\t\t\tif (self.settings.mode === 'single' && self.items.length) {\n\t\t\t\tself.inputState();\n\t\t\t}\n\t\t}\n\n\t\tself.isOpen = false;\n\t\tsetAttr(self.focus_node,{'aria-expanded': 'false'});\n\t\tapplyCSS(self.dropdown,{display: 'none'});\n\t\tif( self.settings.hideSelected ){\n\t\t\tself.clearActiveOption();\n\t\t}\n\t\tself.refreshState();\n\n\t\tif (trigger) self.trigger('dropdown_close', self.dropdown);\n\t}\n\n\t/**\n\t * Calculates and applies the appropriate\n\t * position of the dropdown if dropdownParent = 'body'.\n\t * Otherwise, position is determined by css\n\t */\n\tpositionDropdown(){\n\n\t\tif( this.settings.dropdownParent !== 'body' ){\n\t\t\treturn;\n\t\t}\n\n\t\tvar context\t\t\t= this.control;\n\t\tvar rect\t\t\t= context.getBoundingClientRect();\n\t\tvar top\t\t\t\t= context.offsetHeight + rect.top  + window.scrollY;\n\t\tvar left\t\t\t= rect.left + window.scrollX;\n\n\n\t\tapplyCSS(this.dropdown,{\n\t\t\twidth : rect.width + 'px',\n\t\t\ttop   : top + 'px',\n\t\t\tleft  : left + 'px'\n\t\t});\n\n\t}\n\n\t/**\n\t * Resets / clears all selected items\n\t * from the control.\n\t *\n\t */\n\tclear(silent?:boolean) {\n\t\tvar self = this;\n\n\t\tif (!self.items.length) return;\n\n\t\tvar items = self.controlChildren();\n\t\titerate(items,(item:TomItem)=>{\n\t\t\tself.removeItem(item,true);\n\t\t});\n\n\t\tself.inputState();\n\t\tif( !silent ) self.updateOriginalInput();\n\t\tself.trigger('clear');\n\t}\n\n\t/**\n\t * A helper method for inserting an element\n\t * at the current caret position.\n\t *\n\t */\n\tinsertAtCaret(el:HTMLElement) {\n\t\tconst self\t\t= this;\n\t\tconst caret\t\t= self.caretPos;\n\t\tconst target\t= self.control;\n\n\t\ttarget.insertBefore(el, target.children[caret] || null);\n\t\tself.setCaret(caret + 1);\n\t}\n\n\t/**\n\t * Removes the current selected item(s).\n\t *\n\t */\n\tdeleteSelection(e:KeyboardEvent):boolean {\n\t\tvar direction, selection, caret, tail;\n\t\tvar self = this;\n\n\t\tdirection = (e && e.keyCode === constants.KEY_BACKSPACE) ? -1 : 1;\n\t\tselection = getSelection(self.control_input);\n\n\n\t\t// determine items that will be removed\n\t\tconst rm_items:TomItem[]\t= [];\n\n\t\tif (self.activeItems.length) {\n\n\t\t\ttail = getTail(self.activeItems, direction);\n\t\t\tcaret = nodeIndex(tail);\n\n\t\t\tif (direction > 0) { caret++; }\n\n\t\t\titerate(self.activeItems, (item:TomItem) => rm_items.push(item) );\n\n\t\t} else if ((self.isFocused || self.settings.mode === 'single') && self.items.length) {\n\t\t\tconst items = self.controlChildren();\n\t\t\tlet rm_item;\n\t\t\tif( direction < 0 && selection.start === 0 && selection.length === 0 ){\n\t\t\t\trm_item = items[self.caretPos - 1];\n\n\t\t\t}else if( direction > 0 && selection.start === self.inputValue().length ){\n\t\t\t\trm_item = items[self.caretPos];\n\t\t\t}\n\n\t\t\tif( rm_item !== undefined ){\n\t\t\t\trm_items.push( rm_item );\n\t\t\t}\n\t\t}\n\n\t\tif( !self.shouldDelete(rm_items,e) ){\n\t\t\treturn false;\n\t\t}\n\n\t\tpreventDefault(e,true);\n\n\t\t// perform removal\n\t\tif (typeof caret !== 'undefined') {\n\t\t\tself.setCaret(caret);\n\t\t}\n\n\t\twhile( rm_items.length ){\n\t\t\tself.removeItem(rm_items.pop());\n\t\t}\n\n\t\tself.inputState();\n\t\tself.positionDropdown();\n\t\tself.refreshOptions(false);\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Return true if the items should be deleted\n\t */\n\tshouldDelete(items:TomItem[],evt:MouseEvent|KeyboardEvent){\n\n\t\tconst values = items.map(item => item.dataset.value);\n\n\t\t// allow the callback to abort\n\t\tif( !values.length || (typeof this.settings.onDelete === 'function' && this.settings.onDelete(values,evt) === false) ){\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Selects the previous / next item (depending on the `direction` argument).\n\t *\n\t * > 0 - right\n\t * < 0 - left\n\t *\n\t */\n\tadvanceSelection(direction:number, e?:MouseEvent|KeyboardEvent) {\n\t\tvar last_active, adjacent, self = this;\n\n\t\tif (self.rtl) direction *= -1;\n\t\tif( self.inputValue().length ) return;\n\n\n\t\t// add or remove to active items\n\t\tif( isKeyDown(constants.KEY_SHORTCUT,e) || isKeyDown('shiftKey',e) ){\n\n\t\t\tlast_active\t\t\t= self.getLastActive(direction);\n\t\t\tif( last_active ){\n\n\t\t\t\tif( !last_active.classList.contains('active') ){\n\t\t\t\t\tadjacent\t\t\t= last_active;\n\t\t\t\t}else{\n\t\t\t\t\tadjacent\t\t\t= self.getAdjacent(last_active,direction,'item');\n\t\t\t\t}\n\n\t\t\t// if no active item, get items adjacent to the control input\n\t\t\t}else if( direction > 0 ){\n\t\t\t\tadjacent\t\t\t= self.control_input.nextElementSibling;\n\t\t\t}else{\n\t\t\t\tadjacent\t\t\t= self.control_input.previousElementSibling;\n\t\t\t}\n\n\n\t\t\tif( adjacent ){\n\t\t\t\tif( adjacent.classList.contains('active') ){\n\t\t\t\t\tself.removeActiveItem(last_active);\n\t\t\t\t}\n\t\t\t\tself.setActiveItemClass(adjacent); // mark as last_active !! after removeActiveItem() on last_active\n\t\t\t}\n\n\t\t// move caret to the left or right\n\t\t}else{\n\t\t\tself.moveCaret(direction);\n\t\t}\n\t}\n\n\tmoveCaret(direction:number){}\n\n\t/**\n\t * Get the last active item\n\t *\n\t */\n\tgetLastActive(direction?:number){\n\n\t\tlet last_active = this.control.querySelector('.last-active');\n\t\tif( last_active ){\n\t\t\treturn last_active;\n\t\t}\n\n\n\t\tvar result = this.control.querySelectorAll('.active');\n\t\tif( result ){\n\t\t\treturn getTail(result,direction);\n\t\t}\n\t}\n\n\n\t/**\n\t * Moves the caret to the specified index.\n\t *\n\t * The input must be moved by leaving it in place and moving the\n\t * siblings, due to the fact that focus cannot be restored once lost\n\t * on mobile webkit devices\n\t *\n\t */\n\tsetCaret(new_pos:number) {\n\t\tthis.caretPos = this.items.length;\n\t}\n\n\t/**\n\t * Return list of item dom elements\n\t *\n\t */\n\tcontrolChildren():TomItem[]{\n\t\treturn Array.from( this.control.querySelectorAll('[data-ts-item]') ) as TomItem[];\n\t}\n\n\t/**\n\t * Disables user input on the control. Used while\n\t * items are being asynchronously created.\n\t */\n\tlock() {\n\t\tthis.setLocked(true);\n\t}\n\n\t/**\n\t * Re-enables user input on the control.\n\t */\n\tunlock() {\n\t\tthis.setLocked(false);\n\t}\n\n\t/**\n\t * Disable or enable user input on the control\n\t */\n\tsetLocked( lock:boolean = this.isReadOnly || this.isDisabled ){\n\t\tthis.isLocked = lock;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Disables user input on the control completely.\n\t * While disabled, it cannot receive focus.\n\t */\n\tdisable() {\n\t\tthis.setDisabled(true);\n\t\tthis.close();\n\t}\n\n\t/**\n\t * Enables the control so that it can respond\n\t * to focus and user input.\n\t */\n\tenable() {\n\t\tthis.setDisabled(false);\n\t}\n\n\tsetDisabled(disabled:boolean){\n\t\tthis.focus_node.tabIndex\t\t= disabled ? -1 : this.tabIndex;\n\t\tthis.isDisabled\t\t\t\t\t= disabled;\n\t\tthis.input.disabled\t\t\t\t= disabled;\n\t\tthis.control_input.disabled\t\t= disabled;\n\t\tthis.setLocked();\n\t}\n\n\tsetReadOnly(isReadOnly:boolean){\n\t\tthis.isReadOnly\t\t\t\t\t= isReadOnly;\n\t\tthis.input.readOnly\t\t\t\t= isReadOnly;\n\t\tthis.control_input.readOnly\t\t= isReadOnly;\n\t\tthis.setLocked();\n\t}\n\n\t/**\n\t * Completely destroys the control and\n\t * unbinds all event listeners so that it can\n\t * be garbage collected.\n\t */\n\tdestroy() {\n\t\tvar self = this;\n\t\tvar revertSettings = self.revertSettings;\n\n\t\tself.trigger('destroy');\n\t\tself.off();\n\t\tself.wrapper.remove();\n\t\tself.dropdown.remove();\n\n\t\tself.input.innerHTML = revertSettings.innerHTML;\n\t\tself.input.tabIndex = revertSettings.tabIndex;\n\n\t\tremoveClasses(self.input,'tomselected','ts-hidden-accessible');\n\n\t\tself._destroy();\n\n\t\tdelete self.input.tomselect;\n\t}\n\n\t/**\n\t * A helper method for rendering \"item\" and\n\t * \"option\" templates, given the data.\n\t *\n\t */\n\trender( templateName:TomTemplateNames, data?:any ):null|HTMLElement{\n\t\tvar id, html;\n\t\tconst self = this;\n\n\t\tif( typeof this.settings.render[templateName] !== 'function' ){\n\t\t\treturn null;\n\t\t}\n\n\t\t// render markup\n\t\thtml = self.settings.render[templateName].call(this, data, escape_html);\n\n\t\tif( !html ){\n\t\t\treturn null;\n\t\t}\n\n\t\thtml = getDom( html );\n\n\t\t// add mandatory attributes\n\t\tif (templateName === 'option' || templateName === 'option_create') {\n\n\t\t\tif( data[self.settings.disabledField] ){\n\t\t\t\tsetAttr(html,{'aria-disabled':'true'});\n\t\t\t}else{\n\t\t\t\tsetAttr(html,{'data-selectable': ''});\n\t\t\t}\n\n\t\t}else if (templateName === 'optgroup') {\n\t\t\tid = data.group[self.settings.optgroupValueField];\n\t\t\tsetAttr(html,{'data-group': id});\n\t\t\tif(data.group[self.settings.disabledField]) {\n\t\t\t\tsetAttr(html,{'data-disabled': ''});\n\t\t\t}\n\t\t}\n\n\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\tconst value\t= get_hash(data[self.settings.valueField]);\n\t\t\tsetAttr(html,{'data-value': value });\n\n\n\t\t\t// make sure we have some classes if a template is overwritten\n\t\t\tif( templateName === 'item' ){\n\t\t\t\taddClasses(html,self.settings.itemClass);\n\t\t\t\tsetAttr(html,{'data-ts-item':''});\n\t\t\t}else{\n\t\t\t\taddClasses(html,self.settings.optionClass);\n\t\t\t\tsetAttr(html,{\n\t\t\t\t\trole:'option',\n\t\t\t\t\tid:data.$id\n\t\t\t\t});\n\n\t\t\t\t// update cache\n\t\t\t\tdata.$div = html;\n\t\t\t\tself.options[value] = data;\n\t\t\t}\n\n\n\t\t}\n\n\t\treturn html;\n\n\t}\n\n\n\t/**\n\t * Type guarded rendering\n\t *\n\t */\n\t_render( templateName:TomTemplateNames, data?:any ):HTMLElement{\n\t\tconst html = this.render(templateName, data);\n\n\t\tif( html == null ){\n\t\t\tthrow 'HTMLElement expected';\n\t\t}\n\t\treturn html;\n\t}\n\n\n\t/**\n\t * Clears the render cache for a template. If\n\t * no template is given, clears all render\n\t * caches.\n\t *\n\t */\n\tclearCache():void{\n\n\t\titerate(this.options, (option:TomOption)=>{\n\t\t\tif( option.$div ){\n\t\t\t\toption.$div.remove();\n\t\t\t\tdelete option.$div;\n\t\t\t}\n\t\t});\n\n\t}\n\n\t/**\n\t * Removes a value from item and option caches\n\t *\n\t */\n\tuncacheValue(value:string){\n\n\t\tconst option_el\t\t\t= this.getOption(value);\n\t\tif( option_el ) option_el.remove();\n\n\t}\n\n\t/**\n\t * Determines whether or not to display the\n\t * create item prompt, given a user input.\n\t *\n\t */\n\tcanCreate( input:string ):boolean {\n\t\treturn this.settings.create && (input.length > 0) && (this.settings.createFilter as TomCreateFilter ).call(this, input);\n\t}\n\n\n\t/**\n\t * Wraps this.`method` so that `new_fn` can be invoked 'before', 'after', or 'instead' of the original method\n\t *\n\t * this.hook('instead','onKeyDown',function( arg1, arg2 ...){\n\t *\n\t * });\n\t */\n\thook( when:string, method:string, new_fn:any ){\n\t\tvar self = this;\n\t\tvar orig_method = self[method];\n\n\n\t\tself[method] = function(){\n\t\t\tvar result, result_new;\n\n\t\t\tif( when === 'after' ){\n\t\t\t\tresult = orig_method.apply(self, arguments);\n\t\t\t}\n\n\t\t\tresult_new = new_fn.apply(self, arguments );\n\n\t\t\tif( when === 'instead' ){\n\t\t\t\treturn result_new;\n\t\t\t}\n\n\t\t\tif( when === 'before' ){\n\t\t\t\tresult = orig_method.apply(self, arguments);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\n\t}\n\n};\n", "/**\n * microplugin.js\n * Copyright (c) 2013 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\ntype TSettings = {\n\t[key:string]:any\n}\n\ntype TPlugins = {\n\tnames: string[],\n\tsettings: TSettings,\n\trequested: {[key:string]:boolean},\n\tloaded: {[key:string]:any}\n};\n\nexport type TPluginItem = {name:string,options:{}};\nexport type TPluginHash = {[key:string]:{}};\n\n\n\n\nexport default function MicroPlugin(Interface: any ){\n\n\tInterface.plugins = {};\n\n\treturn class extends Interface{\n\n\t\tpublic plugins:TPlugins = {\n\t\t\tnames     : [],\n\t\t\tsettings  : {},\n\t\t\trequested : {},\n\t\t\tloaded    : {}\n\t\t};\n\n\t\t/**\n\t\t * Registers a plugin.\n\t\t *\n\t\t * @param {function} fn\n\t\t */\n\t\tstatic define(name:string, fn:(this:any,settings:TSettings)=>any){\n\t\t\tInterface.plugins[name] = {\n\t\t\t\t'name' : name,\n\t\t\t\t'fn'   : fn\n\t\t\t};\n\t\t}\n\n\n\t\t/**\n\t\t * Initializes the listed plugins (with options).\n\t\t * Acceptable formats:\n\t\t *\n\t\t * List (without options):\n\t\t *   ['a', 'b', 'c']\n\t\t *\n\t\t * List (with options):\n\t\t *   [{'name': 'a', options: {}}, {'name': 'b', options: {}}]\n\t\t *\n\t\t * Hash (with options):\n\t\t *   {'a': { ... }, 'b': { ... }, 'c': { ... }}\n\t\t *\n\t\t * @param {array|object} plugins\n\t\t */\n\t\tinitializePlugins(plugins:string[]|TPluginItem[]|TPluginHash) {\n\t\t\tvar key, name;\n\t\t\tconst self  = this;\n\t\t\tconst queue:string[] = [];\n\n\t\t\tif (Array.isArray(plugins)) {\n\t\t\t\tplugins.forEach((plugin:string|TPluginItem)=>{\n\t\t\t\t\tif (typeof plugin === 'string') {\n\t\t\t\t\t\tqueue.push(plugin);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.plugins.settings[plugin.name] = plugin.options;\n\t\t\t\t\t\tqueue.push(plugin.name);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else if (plugins) {\n\t\t\t\tfor (key in plugins) {\n\t\t\t\t\tif (plugins.hasOwnProperty(key)) {\n\t\t\t\t\t\tself.plugins.settings[key] = plugins[key];\n\t\t\t\t\t\tqueue.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twhile( name = queue.shift() ){\n\t\t\t\tself.require(name);\n\t\t\t}\n\t\t}\n\n\t\tloadPlugin(name:string) {\n\t\t\tvar self    = this;\n\t\t\tvar plugins = self.plugins;\n\t\t\tvar plugin  = Interface.plugins[name];\n\n\t\t\tif (!Interface.plugins.hasOwnProperty(name)) {\n\t\t\t\tthrow new Error('Unable to find \"' +  name + '\" plugin');\n\t\t\t}\n\n\t\t\tplugins.requested[name] = true;\n\t\t\tplugins.loaded[name] = plugin.fn.apply(self, [self.plugins.settings[name] || {}]);\n\t\t\tplugins.names.push(name);\n\t\t}\n\n\t\t/**\n\t\t * Initializes a plugin.\n\t\t *\n\t\t */\n\t\trequire(name:string) {\n\t\t\tvar self = this;\n\t\t\tvar plugins = self.plugins;\n\n\t\t\tif (!self.plugins.loaded.hasOwnProperty(name)) {\n\t\t\t\tif (plugins.requested[name]) {\n\t\t\t\t\tthrow new Error('Plugin has circular dependency (\"' + name + '\")');\n\t\t\t\t}\n\t\t\t\tself.loadPlugin(name);\n\t\t\t}\n\n\t\t\treturn plugins.loaded[name];\n\t\t}\n\n\t};\n\n}\n", "import TomSelect from './tom-select';\n\nimport change_listener from './plugins/change_listener/plugin';\nimport checkbox_options from './plugins/checkbox_options/plugin';\nimport clear_button from './plugins/clear_button/plugin';\nimport drag_drop from './plugins/drag_drop/plugin';\nimport dropdown_header from './plugins/dropdown_header/plugin';\nimport caret_position from './plugins/caret_position/plugin';\nimport dropdown_input from './plugins/dropdown_input/plugin';\nimport input_autogrow from './plugins/input_autogrow/plugin';\nimport no_backspace_delete from './plugins/no_backspace_delete/plugin';\nimport no_active_items from './plugins/no_active_items/plugin';\nimport optgroup_columns from './plugins/optgroup_columns/plugin';\nimport remove_button from './plugins/remove_button/plugin';\nimport restore_on_backspace from './plugins/restore_on_backspace/plugin';\nimport virtual_scroll from './plugins/virtual_scroll/plugin';\n\nTomSelect.define('change_listener', change_listener);\nTomSelect.define('checkbox_options', checkbox_options);\nTomSelect.define('clear_button', clear_button);\nTomSelect.define('drag_drop', drag_drop);\nTomSelect.define('dropdown_header', dropdown_header);\nTomSelect.define('caret_position', caret_position);\nTomSelect.define('dropdown_input', dropdown_input);\nTomSelect.define('input_autogrow', input_autogrow);\nTomSelect.define('no_backspace_delete', no_backspace_delete);\nTomSelect.define('no_active_items', no_active_items);\nTomSelect.define('optgroup_columns', optgroup_columns);\nTomSelect.define('remove_button', remove_button);\nTomSelect.define('restore_on_backspace', restore_on_backspace);\nTomSelect.define('virtual_scroll', virtual_scroll);\n\nexport default TomSelect;\n", "/**\n * Plugin: \"change_listener\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { addEvent } from '../../utils';\n\nexport default function(this:TomSelect) {\n\taddEvent(this.input,'change',()=>{\n\t\tthis.sync();\n\t});\n};\n", "/**\n * Plugin: \"checkbox_options\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { preventDefault, hash_key } from '../../utils';\nimport { getDom } from '../../vanilla';\nimport { CBOptions } from './types';\n\n\nexport default function(this:TomSelect, userOptions:CBOptions) {\n\tvar self = this;\n\tvar orig_onOptionSelect = self.onOptionSelect;\n\n\tself.settings.hideSelected = false;\n\n\tconst cbOptions : CBOptions = Object.assign({\n\t\t// so that the user may add different ones as well\n\t\tclassName             : \"tomselect-checkbox\",\n\n\t\t// the following default to the historic plugin's values\n\t\tcheckedClassNames     : undefined,\n\t\tuncheckedClassNames   : undefined,\n\t}, userOptions);\n\n\n\tvar UpdateChecked = function(checkbox:HTMLInputElement, toCheck : boolean) {\n\t\tif( toCheck ){\n\t\t\tcheckbox.checked = true;\n\t\t\tif (cbOptions.uncheckedClassNames) {\n\t\t\t\tcheckbox.classList.remove(...cbOptions.uncheckedClassNames);\n\t\t\t}\n\t\t\tif (cbOptions.checkedClassNames) {\n\t\t\t\tcheckbox.classList.add(...cbOptions.checkedClassNames);\n\t\t\t}\n\t\t}else{\n\t\t\tcheckbox.checked = false;\n\t\t\tif (cbOptions.checkedClassNames) {\n\t\t\t\tcheckbox.classList.remove(...cbOptions.checkedClassNames);\n\t\t\t}\n\t\t\tif (cbOptions.uncheckedClassNames) {\n\t\t\t\tcheckbox.classList.add(...cbOptions.uncheckedClassNames);\n\t\t\t}\n\t\t}\n\t}\n\n\t// update the checkbox for an option\n\tvar UpdateCheckbox = function(option:HTMLElement){\n\t\tsetTimeout(()=>{\n\t\t\tvar checkbox = option.querySelector('input.' + cbOptions.className);\n\t\t\tif( checkbox instanceof HTMLInputElement ){\n\t\t\t\tUpdateChecked(checkbox, option.classList.contains('selected'));\n\t\t\t}\n\t\t},1);\n\t};\n\n\t// add checkbox to option template\n\tself.hook('after','setupTemplates',() => {\n\n\t\tvar orig_render_option = self.settings.render.option;\n\n\t\tself.settings.render.option = (data, escape_html) => {\n\t\t\tvar rendered = getDom(orig_render_option.call(self, data, escape_html));\n\t\t\tvar checkbox = document.createElement('input');\n\t\t\tif (cbOptions.className) {\n\t\t\t\tcheckbox.classList.add(cbOptions.className);\n\t\t\t}\n\t\t\tcheckbox.addEventListener('click',function(evt){\n\t\t\t\tpreventDefault(evt);\n\t\t\t});\n\n\t\t\tcheckbox.type = 'checkbox';\n\t\t\tconst hashed = hash_key(data[self.settings.valueField]);\n\n\t\t\tUpdateChecked(checkbox, !!(hashed && self.items.indexOf(hashed) > -1) );\n\n\t\t\trendered.prepend(checkbox);\n\t\t\treturn rendered;\n\t\t};\n\t});\n\n\t// uncheck when item removed\n\tself.on('item_remove',(value:string) => {\n\t\tvar option = self.getOption(value);\n\n\t\tif( option ){ // if dropdown hasn't been opened yet, the option won't exist\n\t\t\toption.classList.remove('selected'); // selected class won't be removed yet\n\t\t\tUpdateCheckbox(option);\n\t\t}\n\t});\n\n\t// check when item added\n\tself.on('item_add',(value:string) => {\n\t\tvar option = self.getOption(value);\n\n\t\tif( option ){ // if dropdown hasn't been opened yet, the option won't exist\n\t\t\tUpdateCheckbox(option);\n\t\t}\n\t});\n\n\n\t// remove items when selected option is clicked\n\tself.hook('instead','onOptionSelect',( evt:KeyboardEvent, option:HTMLElement )=>{\n\n\t\tif( option.classList.contains('selected') ){\n\t\t\toption.classList.remove('selected')\n\t\t\tself.removeItem(option.dataset.value);\n\t\t\tself.refreshOptions();\n\t\t\tpreventDefault(evt,true);\n\t\t\treturn;\n        }\n\n\t\torig_onOptionSelect.call(self, evt, option);\n\n\t\tUpdateCheckbox(option);\n\t});\n\n};\n", "/**\n * Plugin: \"dropdown_header\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { getDom } from '../../vanilla';\nimport { CBOptions } from './types';\n\nexport default function(this:TomSelect, userOptions:CBOptions) {\n\tconst self = this;\n\n\tconst options = Object.assign({\n\t\tclassName: 'clear-button',\n\t\ttitle: 'Clear All',\n\t\thtml: (data:CBOptions) => {\n\t\t\treturn `<div class=\"${data.className}\" title=\"${data.title}\">&#10799;</div>`;\n\t\t}\n\t}, userOptions);\n\n\tself.on('initialize',()=>{\n\t\tvar button = getDom(options.html(options));\n\t\tbutton.addEventListener('click',(evt)=>{\n\n\t\t\tif( self.isLocked ) return;\n\n\t\t\tself.clear();\n\n\t\t\tif( self.settings.mode === 'single' && self.settings.allowEmptyOption ){\n\t\t\t\tself.addItem('');\n\t\t\t}\n\n\t\t\tevt.preventDefault();\n\t\t\tevt.stopPropagation();\n\t\t});\n\t\tself.control.appendChild(button);\n\t});\n\n};\n", "/**\n * Plugin: \"drag_drop\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { TomOption, TomItem } from '../../types/index';\nimport { escape_html, preventDefault, addEvent } from '../../utils';\nimport { getDom, setAttr } from '../../vanilla';\n\n\nconst insertAfter = (referenceNode:Element, newNode:Element) => {\n\treferenceNode.parentNode?.insertBefore(newNode, referenceNode.nextSibling);\n}\n\nconst insertBefore = (referenceNode:Element, newNode:Element) => {\n\treferenceNode.parentNode?.insertBefore(newNode, referenceNode);\n}\n\nconst isBefore = (referenceNode:Element|undefined|null, newNode:Element|undefined|null) =>{\n\t\n\tdo{\n\t\tnewNode = newNode?.previousElementSibling;\n\n\t\tif( referenceNode == newNode ){\n\t\t\treturn true;\n\t\t}\n\n\t}while( newNode && newNode.previousElementSibling );\n\n\treturn false;\n}\n\nexport default function(this:TomSelect) {\n\tvar self = this;\n\tif (self.settings.mode !== 'multi') return;\n\n\tvar orig_lock\t\t= self.lock;\n\tvar orig_unlock\t\t= self.unlock;\n\tlet sortable = true;\n\t\tlet drag_item:TomItem|undefined;\n\n\n\t/**\n\t * Add draggable attribute to item\n\t */\n\tself.hook('after','setupTemplates',() => {\n\n\t\tvar orig_render_item = self.settings.render.item;\n\n\t\tself.settings.render.item = (data:TomOption, escape:typeof escape_html) => {\n\t\t\tconst item = getDom(orig_render_item.call(self, data, escape)) as TomItem;\n\t\t\tsetAttr(item,{'draggable':'true'});\n\n\n\t\t\t// prevent doc_mousedown (see tom-select.ts)\n\t\t\tconst mousedown = (evt:Event) => {\n\t\t\t\tif( !sortable ) preventDefault(evt);\n\t\t\t\tevt.stopPropagation();\n\t\t\t}\n\n\t\t\tconst dragStart = (evt:Event) => {\n\t\t\t\tdrag_item = item;\n\t\t\t\t\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\titem.classList.add('ts-dragging');\n\t\t\t\t}, 0);\n\t\t\t\t\n\t\t\t}\n\n\t\t\tconst dragOver = (evt:Event) =>{\n\t\t\t\tevt.preventDefault();\n\t\t\t\titem.classList.add('ts-drag-over');\n\t\t\t\tmoveitem(item,drag_item);\n\t\t\t}\n\n\t\t\tconst dragLeave = () => {\n\t\t\t\titem.classList.remove('ts-drag-over');\n\t\t\t}\n\n\t\t\tconst moveitem = (targetitem:TomItem, dragitem:TomItem|undefined) => {\n\t\t\t\tif( dragitem === undefined ) return;\n\t\t\t\t\n\t\t\t\tif( isBefore(dragitem,item) ){\n\t\t\t\t\tinsertAfter(targetitem,dragitem);\n\t\t\t\t}else{\n\t\t\t\t\tinsertBefore(targetitem,dragitem);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst dragend = () => {\n\t\t\t\tdocument.querySelectorAll('.ts-drag-over').forEach(el=> el.classList.remove('ts-drag-over'));\n\t\t\t\tdrag_item?.classList.remove('ts-dragging');\n\t\t\t\tdrag_item = undefined;\n\n\t\t\t\tvar values:string[] = [];\n\t\t\t\tself.control.querySelectorAll(`[data-value]`).forEach((el:Element)=> {\n\t\t\t\t\tif( (<HTMLOptionElement>el).dataset.value ){\n\t\t\t\t\t\tlet value = (<HTMLOptionElement>el).dataset.value;\n\t\t\t\t\t\tif( value ){\n\t\t\t\t\t\t\tvalues.push(value);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tself.setValue(values);\n\t\t\t}\t\n\n\n\t\t\taddEvent(item,'mousedown', mousedown);\n\t\t\taddEvent(item,'dragstart', dragStart);\n\t\t\taddEvent(item,'dragenter', dragOver)\n\t\t\taddEvent(item,'dragover', dragOver);\n\t\t\taddEvent(item,'dragleave', dragLeave);\n\t\t\taddEvent(item,'dragend', dragend);\n\t\t\t\t\n\t\t\treturn item;\n\t\t}\t\n\t});\n\n\n\n\tself.hook('instead','lock',()=>{\n\t\tsortable = false;\n\t\treturn orig_lock.call(self);\n\t});\n\n\tself.hook('instead','unlock',()=>{\n\t\tsortable = true;\n\t\treturn orig_unlock.call(self);\n\t});\n\n};\n", "/**\n * Plugin: \"dropdown_header\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { getDom } from '../../vanilla';\nimport { preventDefault } from '../../utils';\nimport { DHOptions } from './types';\n\nexport default function(this:TomSelect, userOptions:DHOptions) {\n\tconst self = this;\n\n\tconst options = Object.assign({\n\t\ttitle         : 'Untitled',\n\t\theaderClass   : 'dropdown-header',\n\t\ttitleRowClass : 'dropdown-header-title',\n\t\tlabelClass    : 'dropdown-header-label',\n\t\tcloseClass    : 'dropdown-header-close',\n\n\t\thtml: (data:DHOptions) => {\n\t\t\treturn (\n\t\t\t\t'<div class=\"' + data.headerClass + '\">' +\n\t\t\t\t\t'<div class=\"' + data.titleRowClass + '\">' +\n\t\t\t\t\t\t'<span class=\"' + data.labelClass + '\">' + data.title + '</span>' +\n\t\t\t\t\t\t'<a class=\"' + data.closeClass + '\">&times;</a>' +\n\t\t\t\t\t'</div>' +\n\t\t\t\t'</div>'\n\t\t\t);\n\t\t}\n\t}, userOptions);\n\n\tself.on('initialize',()=>{\n\t\tvar header = getDom(options.html(options));\n\n\t\tvar close_link = header.querySelector('.'+options.closeClass);\n\t\tif( close_link ){\n\t\t\tclose_link.addEventListener('click',(evt)=>{\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t\tself.close();\n\t\t\t});\n\t\t}\n\n\t\tself.dropdown.insertBefore(header, self.dropdown.firstChild);\n\t});\n\n};\n", "/**\n * Plugin: \"dropdown_input\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { nodeIndex, removeClasses } from '../../vanilla';\n\n\nexport default function(this:TomSelect) {\n\tvar self = this;\n\n\t/**\n\t * Moves the caret to the specified index.\n\t *\n\t * The input must be moved by leaving it in place and moving the\n\t * siblings, due to the fact that focus cannot be restored once lost\n\t * on mobile webkit devices\n\t *\n\t */\n\tself.hook('instead','setCaret',(new_pos:number) => {\n\n\t\tif( self.settings.mode === 'single' || !self.control.contains(self.control_input) ) {\n\t\t\tnew_pos = self.items.length;\n\t\t} else {\n\t\t\tnew_pos = Math.max(0, Math.min(self.items.length, new_pos));\n\n\t\t\tif( new_pos != self.caretPos && !self.isPending ){\n\n\t\t\t\tself.controlChildren().forEach((child,j) => {\n\t\t\t\t\tif( j < new_pos ){\n\t\t\t\t\t\tself.control_input.insertAdjacentElement('beforebegin', child );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.control.appendChild( child );\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tself.caretPos = new_pos;\n\t});\n\n\tself.hook('instead','moveCaret',(direction:number) => {\n\n\t\tif( !self.isFocused ) return;\n\n\t\t// move caret before or after selected items\n\t\tconst last_active\t\t= self.getLastActive(direction);\n\t\tif( last_active ){\n\t\t\tconst idx = nodeIndex(last_active);\n\t\t\tself.setCaret(direction > 0 ? idx + 1: idx);\n\t\t\tself.setActiveItem();\n\t\t\tremoveClasses(last_active as HTMLElement,'last-active');\n\n\t\t// move caret left or right of current position\n\t\t}else{\n\t\t\tself.setCaret(self.caretPos + direction);\n\n\t\t}\n\n\t});\n\n};\n", "/**\n * Plugin: \"dropdown_input\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport * as constants from '../../constants';\nimport { getDom, addClasses } from '../../vanilla';\nimport { addEvent, preventDefault } from '../../utils';\n\n\nexport default function(this:TomSelect) {\n\tconst self = this;\n\n\tself.settings.shouldOpen = true; // make sure the input is shown even if there are no options to display in the dropdown\n\n\tself.hook('before','setup',()=>{\n\t\tself.focus_node\t\t= self.control;\n\n\t\taddClasses( self.control_input, 'dropdown-input');\n\n\t \tconst div = getDom('<div class=\"dropdown-input-wrap\">');\n\t\tdiv.append(self.control_input);\n\t\tself.dropdown.insertBefore(div, self.dropdown.firstChild);\n\n\t\t// set a placeholder in the select control\n\t\tconst placeholder = getDom('<input class=\"items-placeholder\" tabindex=\"-1\" />') as HTMLInputElement;\n\t\tplaceholder.placeholder = self.settings.placeholder ||'';\n\t\tself.control.append(placeholder);\n\n\t});\n\n\n\tself.on('initialize',()=>{\n\n\t\t// set tabIndex on control to -1, otherwise [shift+tab] will put focus right back on control_input\n\t\tself.control_input.addEventListener('keydown',(evt:KeyboardEvent) =>{\n\t\t//addEvent(self.control_input,'keydown' as const,(evt:KeyboardEvent) =>{\n\t\t\tswitch( evt.keyCode ){\n\t\t\t\tcase constants.KEY_ESC:\n\t\t\t\t\tif (self.isOpen) {\n\t\t\t\t\t\tpreventDefault(evt,true);\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t}\n\t\t\t\t\tself.clearActiveItems();\n\t\t\t\treturn;\n\t\t\t\tcase constants.KEY_TAB:\n\t\t\t\t\tself.focus_node.tabIndex = -1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn self.onKeyDown.call(self,evt);\n\t\t});\n\n\t\tself.on('blur',()=>{\n\t\t\tself.focus_node.tabIndex = self.isDisabled ? -1 : self.tabIndex;\n\t\t});\n\n\n\t\t// give the control_input focus when the dropdown is open\n\t\tself.on('dropdown_open',() =>{\n\t\t\tself.control_input.focus();\n\t\t});\n\n\t\t// prevent onBlur from closing when focus is on the control_input\n\t\tconst orig_onBlur = self.onBlur;\n\t\tself.hook('instead','onBlur',(evt?:FocusEvent)=>{\n\t\t\tif( evt && evt.relatedTarget == self.control_input ) return;\n\t\t\treturn orig_onBlur.call(self);\n\t\t});\n\n\t\taddEvent(self.control_input,'blur', () => self.onBlur() );\n\n\t\t// return focus to control to allow further keyboard input\n\t\tself.hook('before','close',() =>{\n\n\t\t\tif( !self.isOpen ) return;\n\t\t\tself.focus_node.focus({preventScroll: true});\n\t\t});\n\n\t});\n\n};\n", "/**\n * Plugin: \"input_autogrow\" (Tom Select)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { addEvent } from '../../utils';\n\nexport default function(this:TomSelect) {\n\tvar self\t\t\t\t\t= this;\n\n\tself.on('initialize',()=>{\n\n\n\t\tvar test_input\t\t\t\t= document.createElement('span');\n\t\tvar control\t\t\t\t\t= self.control_input;\n\t\ttest_input.style.cssText\t= 'position:absolute; top:-99999px; left:-99999px; width:auto; padding:0; white-space:pre; ';\n\n\t\tself.wrapper.appendChild(test_input);\n\n\n\t\tvar transfer_styles\t\t\t= [ 'letterSpacing', 'fontSize', 'fontFamily', 'fontWeight', 'textTransform' ];\n\n\t\tfor( const style_name of transfer_styles ){\n\t\t\t// @ts-ignore TS7015 https://stackoverflow.com/a/50506154/697576\n\t\t\ttest_input.style[style_name] = control.style[style_name];\n\t\t}\n\n\n\t\t/**\n\t\t * Set the control width\n\t\t *\n\t\t */\n\t\tvar resize = ()=>{\n\t\t\ttest_input.textContent\t= control.value;\n\t\t\tcontrol.style.width\t\t= test_input.clientWidth+'px';\n\t\t};\n\n\t\tresize();\n\t\tself.on('update item_add item_remove',resize);\n\t\taddEvent(control,'input', resize );\n\t\taddEvent(control,'keyup', resize );\n\t\taddEvent(control,'blur', resize );\n\t\taddEvent(control,'update', resize );\n\t});\n\n};\n", "/**\n * Plugin: \"input_autogrow\" (Tom Select)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\n\nexport default function(this:TomSelect) {\n\tvar self = this;\n\tvar orig_deleteSelection = self.deleteSelection;\n\n\tthis.hook('instead','deleteSelection',(evt:KeyboardEvent) => {\n\n\t\tif( self.activeItems.length ){\n\t\t\treturn orig_deleteSelection.call(self, evt);\n\t\t}\n\n\t\treturn false;\n\t});\n\n};\n", "/**\n * Plugin: \"no_active_items\" (Tom Select)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\n\nexport default function(this:TomSelect) {\n\tthis.hook('instead','setActiveItem',() => {});\n\tthis.hook('instead','selectAll',() => {});\n};\n", "/**\n * Plugin: \"optgroup_columns\" (Tom Select.js)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport * as constants from '../../constants';\nimport { parentMatch, nodeIndex } from '../../vanilla';\n\nexport default function(this:TomSelect) {\n\tvar self = this;\n\n\tvar orig_keydown = self.onKeyDown;\n\n\tself.hook('instead','onKeyDown',(evt:KeyboardEvent)=>{\n\t\tvar index, option, options, optgroup;\n\n\t\tif( !self.isOpen || !(evt.keyCode === constants.KEY_LEFT || evt.keyCode === constants.KEY_RIGHT)) {\n\t\t\treturn orig_keydown.call(self,evt);\n\t\t}\n\n\t\tself.ignoreHover\t= true;\n\t\toptgroup\t\t\t= parentMatch(self.activeOption,'[data-group]');\n\t\tindex\t\t\t\t= nodeIndex(self.activeOption,'[data-selectable]');\n\n\t\tif( !optgroup ){\n\t\t\treturn;\n\t\t}\n\n\t\tif( evt.keyCode === constants.KEY_LEFT ){\n\t\t\toptgroup = optgroup.previousSibling;\n\t\t} else {\n\t\t\toptgroup = optgroup.nextSibling;\n\t\t}\n\n\t\tif( !optgroup ){\n\t\t\treturn;\n\t\t}\n\n\t\toptions\t\t\t\t= (<HTMLOptGroupElement>optgroup).querySelectorAll('[data-selectable]');\n\t\toption\t\t\t\t= options[ Math.min(options.length - 1, index) ] as HTMLElement;\n\n\t\tif( option ){\n\t\t\tself.setActiveOption(option);\n\t\t}\n\n\t});\n\n};\n", "/**\n * Plugin: \"remove_button\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { getDom } from '../../vanilla';\nimport { escape_html, preventDefault, addEvent } from '../../utils';\nimport { TomOption, TomItem } from '../../types/index';\nimport { RBOptions } from './types';\n\nexport default function(this:TomSelect, userOptions:RBOptions) {\n\n\tconst options = Object.assign({\n\t\t\tlabel     : '&times;',\n\t\t\ttitle     : 'Remove',\n\t\t\tclassName : 'remove',\n\t\t\tappend    : true\n\t\t}, userOptions);\n\n\n\t//options.className = 'remove-single';\n\tvar self\t\t\t= this;\n\n\t// override the render method to add remove button to each item\n\tif( !options.append ){\n\t\treturn;\n\t}\n\n\tvar html = '<a href=\"javascript:void(0)\" class=\"' + options.className + '\" tabindex=\"-1\" title=\"' + escape_html(options.title) + '\">' + options.label + '</a>';\n\n\tself.hook('after','setupTemplates',() => {\n\n\t\tvar orig_render_item = self.settings.render.item;\n\n\t\tself.settings.render.item = (data:TomOption, escape:typeof escape_html) => {\n\n\t\t\tvar item = getDom(orig_render_item.call(self, data, escape)) as TomItem;\n\n\t\t\tvar close_button = getDom(html);\n\t\t\titem.appendChild(close_button);\n\n\t\t\taddEvent(close_button,'mousedown',(evt) => {\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t});\n\n\t\t\taddEvent(close_button,'click',(evt) => {\n\n\t\t\t\tif( self.isLocked ) return;\n\n\t\t\t\t// propagating will trigger the dropdown to show for single mode\n\t\t\t\tpreventDefault(evt,true);\n\n\t\t\t\tif( self.isLocked ) return;\n\t\t\t\tif( !self.shouldDelete([item],evt as MouseEvent) ) return;\n\n\t\t\t\tself.removeItem(item);\n\t\t\t\tself.refreshOptions(false);\n\t\t\t\tself.inputState();\n\t\t\t});\n\n\t\t\treturn item;\n\t\t};\n\n\t});\n\n\n};\n", "/**\n * Plugin: \"restore_on_backspace\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select';\nimport { TomOption } from '../../types/index';\n\ntype TPluginOptions = {\n\ttext?:(option:TomOption)=>string,\n};\n\nexport default function(this:TomSelect, userOptions:TPluginOptions) {\n\tconst self = this;\n\n\tconst options = Object.assign({\n\t\ttext: (option:TomOption) => {\n\t\t\treturn option[self.settings.labelField];\n\t\t}\n\t},userOptions);\n\n\tself.on('item_remove',function(value:string){\n\t\tif( !self.isFocused ){\n\t\t\treturn;\n\t\t}\n\n\t\tif( self.control_input.value.trim() === '' ){\n\t\t\tvar option = self.options[value];\n\t\t\tif( option ){\n\t\t\t\tself.setTextboxValue(options.text.call(self, option));\n\t\t\t}\n\t\t}\n\t});\n\n};\n", "/**\n * Plugin: \"restore_on_backspace\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { TomOption } from '../../types/index';\nimport { addClasses } from '../../vanilla';\n\nexport default function(this:TomSelect) {\n\tconst self\t\t\t\t\t\t\t= this;\n\tconst orig_canLoad\t\t\t\t\t= self.canLoad;\n\tconst orig_clearActiveOption\t\t= self.clearActiveOption;\n\tconst orig_loadCallback\t\t\t\t= self.loadCallback;\n\n\tvar pagination:{[key:string]:any}\t= {};\n\tvar dropdown_content:HTMLElement;\n\tvar loading_more\t\t\t\t\t= false;\n\tvar load_more_opt:HTMLElement;\n\tvar default_values: string[]\t\t= [];\n\n\tif( !self.settings.shouldLoadMore ){\n\n\t\t// return true if additional results should be loaded\n\t\tself.settings.shouldLoadMore = ():boolean=>{\n\n\t\t\tconst scroll_percent = dropdown_content.clientHeight / (dropdown_content.scrollHeight - dropdown_content.scrollTop);\n\t\t\tif( scroll_percent > 0.9 ){\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif( self.activeOption ){\n\t\t\t\tvar selectable\t= self.selectable();\n\t\t\t\tvar index\t\t= Array.from(selectable).indexOf(self.activeOption);\n\t\t\t\tif( index >= (selectable.length-2) ){\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\t}\n\n\n\tif( !self.settings.firstUrl ){\n\t\tthrow 'virtual_scroll plugin requires a firstUrl() method';\n\t}\n\n\n\t// in order for virtual scrolling to work,\n\t// options need to be ordered the same way they're returned from the remote data source\n\tself.settings.sortField\t\t\t= [{field:'$order'},{field:'$score'}];\n\n\n\t// can we load more results for given query?\n\tconst canLoadMore = (query:string):boolean => {\n\n\t\tif( typeof self.settings.maxOptions === 'number' && dropdown_content.children.length >= self.settings.maxOptions ){\n\t\t\treturn false;\n\t\t}\n\n\t\tif( (query in pagination) && pagination[query] ){\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t};\n\n\tconst clearFilter = (option:TomOption, value:string):boolean => {\n\t\tif( self.items.indexOf(value) >= 0 || default_values.indexOf(value) >= 0 ){\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\n\t// set the next url that will be\n\tself.setNextUrl = (value:string,next_url:any):void => {\n\t\tpagination[value] = next_url;\n\t};\n\n\t// getUrl() to be used in settings.load()\n\tself.getUrl = (query:string):any =>{\n\n\t\tif( query in pagination ){\n\t\t\tconst next_url = pagination[query];\n\t\t\tpagination[query] = false;\n\t\t\treturn next_url;\n\t\t}\n\n\t\t// if the user goes back to a previous query\n\t\t// we need to load the first page again\n\t\tself.clearPagination();\n\n\t\treturn self.settings.firstUrl.call(self,query);\n\t};\n\n\t// clear pagination\n\tself.clearPagination = ():void =>{\n\t\tpagination = {};\n\t};\n\n\t// don't clear the active option (and cause unwanted dropdown scroll)\n\t// while loading more results\n\tself.hook('instead','clearActiveOption',()=>{\n\n\t\tif( loading_more ){\n\t\t\treturn;\n\t\t}\n\n\t\treturn orig_clearActiveOption.call(self);\n\t});\n\n\t// override the canLoad method\n\tself.hook('instead','canLoad',(query:string)=>{\n\n\t\t// first time the query has been seen\n\t\tif( !(query in pagination) ){\n\t\t\treturn orig_canLoad.call(self,query);\n\t\t}\n\n\t\treturn canLoadMore(query);\n\t});\n\n\n\t// wrap the load\n\tself.hook('instead','loadCallback',( options:TomOption[], optgroups:TomOption[])=>{\n\n\t\tif( !loading_more ){\n\t\t\tself.clearOptions(clearFilter);\n\t\t}else if( load_more_opt ){\n\t\t\tconst first_option = options[0];\n\t\t\tif( first_option !== undefined ){\n\t\t\t\tload_more_opt.dataset.value\t\t= first_option[self.settings.valueField];\n\t\t\t}\n\t\t}\n\n\t\torig_loadCallback.call( self, options, optgroups);\n\n\t\tloading_more = false;\n\t});\n\n\n\t// add templates to dropdown\n\t//\tloading_more if we have another url in the queue\n\t//\tno_more_results if we don't have another url in the queue\n\tself.hook('after','refreshOptions',()=>{\n\n\t\tconst query\t\t= self.lastValue;\n\t\tvar option;\n\n\t\tif( canLoadMore(query) ){\n\n\t\t\toption = self.render('loading_more',{query:query});\n\t\t\tif( option ){\n\t\t\t\toption.setAttribute('data-selectable',''); // so that navigating dropdown with [down] keypresses can navigate to this node\n\t\t\t\tload_more_opt = option;\n\t\t\t}\n\n\t\t}else if( (query in pagination) && !dropdown_content.querySelector('.no-results') ){\n\t\t\toption = self.render('no_more_results',{query:query});\n\t\t}\n\n\t\tif( option ){\n\t\t\taddClasses(option,self.settings.optionClass);\n\t\t\tdropdown_content.append( option );\n\t\t}\n\n\t});\n\n\n\t// add scroll listener and default templates\n\tself.on('initialize',()=>{\n\t\tdefault_values = Object.keys(self.options);\n\t\tdropdown_content = self.dropdown_content;\n\n\t\t// default templates\n\t\tself.settings.render = Object.assign({}, {\n\t\t\tloading_more:() => {\n\t\t\t\treturn `<div class=\"loading-more-results\">Loading more results ... </div>`;\n\t\t\t},\n\t\t\tno_more_results:() =>{\n\t\t\t\treturn `<div class=\"no-more-results\">No more results</div>`;\n\t\t\t}\n\t\t},self.settings.render);\n\n\n\t\t// watch dropdown content scroll position\n\t\tdropdown_content.addEventListener('scroll',()=>{\n\n\t\t\tif( !self.settings.shouldLoadMore.call(self) ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// !important: this will get checked again in load() but we still need to check here otherwise loading_more will be set to true\n\t\t\tif( !canLoadMore(self.lastValue) ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// don't call load() too much\n\t\t\tif( loading_more ) return;\n\n\n\t\t\tloading_more = true;\n\t\t\tself.load.call(self,self.lastValue);\n\t\t});\n\t});\n\n};\n"],
  "mappings": "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",
  "names": ["forEvents", "events", "callback", "split", "forEach", "event", "MicroEvent", "constructor", "this", "_events", "on", "fct", "event_array", "push", "off", "n", "arguments", "length", "splice", "indexOf", "trigger", "args", "self", "apply", "arrayToPattern", "chars", "filter", "Boolean", "maxValueLength", "join", "sequencePattern", "array", "hasDuplicates", "pattern", "prev_char_count", "prev_pattern", "char", "i", "setToPattern", "toArray", "Set", "size", "escape_regex", "str", "replace", "reduce", "longest", "value", "Math", "max", "unicodeLength", "p", "Array", "from", "allSubstrings", "input", "result", "start", "substring", "subresult", "tmp", "slice", "charAt", "unshift", "code_points", "unicode_map", "multi_char_reg", "latin_convert", "latin_condensed", "a", "aa", "ae", "ao", "au", "av", "ay", "b", "c", "d", "e", "f", "g", "h", "j", "k", "l", "m", "o", "oe", "oi", "oo", "ou", "q", "r", "s", "t", "th", "tz", "u", "v", "vy", "w", "y", "z", "hv", "latin", "unicode", "convert_pat", "RegExp", "Object", "keys", "normalize", "form", "asciifold", "_asciifold", "toLowerCase", "generateSets", "unicode_sets", "addMatching", "folded", "to_add", "folded_set", "patt", "match", "add", "code_point_min", "code_point_max", "composed", "String", "fromCharCode", "code_point", "generateMap", "multi_char", "set", "sort", "multi_char_patt", "substringsToPattern", "min_replacement", "map", "sub_pat", "strings", "chars_replaced", "sequencesToPattern", "sequences", "all", "sequence", "seq", "len", "substrs", "inSequences", "needle_seq", "end", "needle_parts", "parts", "part", "needle_part", "substr", "Sequence", "min", "last", "position", "last_piece", "clone", "JSON", "parse", "stringify", "last_part", "pop", "last_substr", "clone_last_len", "getPattern", "_code_points", "match_str", "overlapping", "added_types", "has", "new_seq", "old_seq", "getAttr", "obj", "name", "getAttrNesting", "names", "shift", "scoreValue", "token", "weight", "score", "pos", "regex", "search", "string", "propToArray", "key", "isArray", "iterate", "object", "hasOwnProperty", "cmp", "Sifter", "items", "settings", "diacritics", "query", "respect_word_boundaries", "weights", "tokens", "words", "field_regex", "word", "field_match", "field", "options", "prepareSearch", "_getScoreFunction", "token_count", "fields", "field_count", "getAttrFn", "scoreObject", "data", "sum", "conjunction", "_getSortFunction", "implicit_score", "sort_flds", "sort_empty", "bind", "get_field", "id", "fld", "direction", "sort_fld", "optsUser", "assign", "trim", "tokenize", "total", "nesting", "fn_score", "item", "_", "fn_sort", "limit", "getDom", "jquery", "HTMLElement", "isHtmlString", "tpl", "document", "createElement", "innerHTML", "content", "firstChild", "querySelector", "arg", "triggerEvent", "dom_el", "event_name", "createEvent", "initEvent", "dispatchEvent", "applyCSS", "css", "style", "addClasses", "elmts", "classes", "norm_classes", "classesArray", "castAsArray", "el", "cls", "classList", "removeClasses", "remove", "_classes", "concat", "parentMatch", "target", "selector", "wrapper", "contains", "matches", "parentNode", "getTail", "list", "nodeIndex", "amongst", "nodeName", "previousElementSibling", "setAttr", "attrs", "val", "attr", "removeAttribute", "setAttribute", "replaceNode", "existing", "replacement", "replaceChild", "highlight", "element", "highlightRecursive", "node", "nodeType", "spannode", "className", "middlebit", "splitText", "index", "middleclone", "cloneNode", "appendChild", "childNodes", "test", "tagName", "KEY_SHORTCUT", "navigator", "userAgent", "defaults", "optgroups", "plugins", "delimiter", "splitOn", "persist", "create", "createOnBlur", "createFilter", "openOnFocus", "shouldOpen", "maxOptions", "maxItems", "hideSelected", "duplicates", "addPrecedence", "selectOnTab", "preload", "allowEmptyOption", "refreshThrottle", "loadThrottle", "loadingClass", "dataAttr", "optgroupField", "valueField", "labelField", "disabledField", "optgroupLabelField", "optgroupValueField", "lockOptgroupOrder", "sortField", "searchField", "searchConjunction", "mode", "wrapperClass", "controlClass", "dropdownClass", "dropdownContentClass", "itemClass", "optionClass", "dropdownParent", "controlInput", "copyClassesToDropdown", "placeholder", "hidePlaceholder", "shouldLoad", "render", "hash_key", "get_hash", "escape_html", "loadDebounce", "fn", "delay", "timeout", "loading", "clearTimeout", "setTimeout", "loadedSearches", "call", "debounce_events", "types", "type", "event_args", "preventDefault", "evt", "stop", "stopPropagation", "addEvent", "addEventListener", "isKeyDown", "key_name", "altKey", "ctrlKey", "shiftKey", "metaKey", "getId", "existing_id", "getAttribute", "addSlashes", "append", "parent", "getSettings", "settings_user", "attr_data", "field_label", "field_value", "field_disabled", "field_optgroup", "field_optgroup_label", "field_optgroup_value", "tag_name", "option", "textContent", "settings_element", "init_select", "optionsMap", "group_count", "$order", "readData", "dataset", "json", "addOption", "group", "arr", "option_data", "disabled", "$option", "selected", "hasAttribute", "children", "child", "optgroup", "optgroup_data", "init_textbox", "data_raw", "opt", "values", "instance_i", "TomSelect", "Interface", "super", "requested", "loaded", "initializePlugins", "queue", "plugin", "require", "loadPlugin", "Error", "input_arg", "user_settings", "dir", "control_input", "dropdown", "control", "dropdown_content", "focus_node", "order", "tabIndex", "is_select_tag", "rtl", "inputId", "_destroy", "sifter", "isOpen", "isDisabled", "isReadOnly", "isRequired", "isInvalid", "isValid", "isLocked", "isFocused", "isInputHidden", "isSetup", "ignoreFocus", "ignoreHover", "hasOptions", "currentResults", "lastValue", "caretPos", "activeOption", "activeItems", "userOptions", "refreshTimeout", "tomselect", "window", "getComputedStyle", "getPropertyValue", "required", "setupCallbacks", "setupTemplates", "_render", "inputMode", "setup", "passive_event", "passive", "listboxId", "role", "control_id", "label", "label_click", "focus", "for", "label_id", "width", "classes_plugins", "multiple", "load", "target_match", "onOptionHover", "capture", "onOptionSelect", "onItemSelect", "onClick", "onKeyDown", "onKeyPress", "onInput", "onBlur", "onFocus", "onPaste", "doc_mousedown", "composedPath", "blur", "inputState", "win_scroll", "positionDropdown", "removeEventListener", "revertSettings", "insertAdjacentElement", "sync", "refreshState", "updateOriginalInput", "refreshItems", "close", "disable", "readOnly", "setReadOnly", "enable", "onChange", "setupOptions", "addOptions", "registerOptionGroup", "templates", "optgroup_header", "escape", "option_create", "no_results", "not_loading", "callbacks", "initialize", "change", "item_add", "item_remove", "item_select", "clear", "option_add", "option_remove", "option_clear", "optgroup_add", "optgroup_remove", "optgroup_clear", "dropdown_open", "dropdown_close", "get_settings", "setValue", "lastQuery", "clearActiveItems", "onMouseDown", "pastedText", "inputValue", "splitInput", "piece", "addItem", "createItem", "character", "keyCode", "which", "constants", "selectAll", "open", "next", "getAdjacent", "setActiveOption", "prev", "canSelect", "activeElement", "advanceSelection", "deleteSelection", "_onInput", "refreshOptions", "wasFocused", "hasFocus", "deactivate", "setActiveItem", "setCaret", "parentElement", "closeAfterSelect", "canLoad", "loadCallback", "clearActiveOption", "setTextboxValue", "getValue", "silent", "addItems", "setMaxItems", "eventName", "begin", "swap", "getLastActive", "prototype", "setActiveItemClass", "removeActiveItem", "last_active", "idx", "scroll", "scrollToOption", "behavior", "height_menu", "clientHeight", "scrollTop", "height_item", "offsetHeight", "getBoundingClientRect", "top", "scrollBehavior", "controlChildren", "toggle", "offsetWidth", "getScoreFunction", "getSearchOptions", "calculateScore", "hashed", "triggerDropdown", "html", "has_create_option", "active_group", "groups", "groups_order", "same_query", "results", "active_option", "show_dropdown", "closest", "getGroupFragment", "group_order_i", "order_group", "fragment", "group_fragment", "createDocumentFragment", "opt_value", "opt_hash", "option_el", "getOption", "includes", "self_optgroup", "$id", "toString", "elements", "group_order", "group_heading", "group_options", "header", "group_html", "querySelectorAll", "tok", "add_template", "template", "insertBefore", "canCreate", "undefined", "active_index", "selectable", "user_created", "dat", "registerOption", "addOptionGroup", "hashed_id", "removeOptionGroup", "clearCache", "clearOptionGroups", "updateOption", "item_new", "index_item", "value_old", "value_new", "data_old", "getItem", "uncacheValue", "option_new", "removeOption", "removeItem", "clearOptions", "boundFilter", "clearFilter", "$div", "last_item", "x", "isPending", "wasFull", "isFull", "insertAtCaret", "output", "caret", "lock", "created", "unlock", "refreshValidityState", "wrap_classList", "validity", "valid", "opts", "empty_option", "AddSelected", "has_selected", "visibility", "display", "context", "rect", "scrollY", "left", "scrollX", "selection", "tail", "selectionStart", "selectionEnd", "rm_items", "rm_item", "shouldDelete", "onDelete", "adjacent", "nextElementSibling", "moveCaret", "new_pos", "setLocked", "setDisabled", "destroy", "templateName", "hook", "when", "method", "new_fn", "orig_method", "result_new", "define", "orig_onOptionSelect", "cbOptions", "checkedClassNames", "uncheckedClassNames", "UpdateChecked", "checkbox", "toCheck", "checked", "UpdateCheckbox", "HTMLInputElement", "orig_render_option", "rendered", "prepend", "title", "button", "orig_lock", "orig_unlock", "drag_item", "sortable", "orig_render_item", "draggable", "dragOver", "moveitem", "targetitem", "dragitem", "insertAfter", "referenceNode", "newNode", "_referenceNode$parent", "isBefore", "_newNode", "nextSibling", "_referenceNode$parent2", "dragLeave", "dragend", "_drag_item", "headerClass", "titleRowClass", "labelClass", "closeClass", "close_link", "div", "orig_onBlur", "relatedTarget", "preventScroll", "test_input", "cssText", "style_name", "resize", "clientWidth", "orig_deleteSelection", "orig_keydown", "previousSibling", "close_button", "text", "orig_canLoad", "orig_clearActiveOption", "orig_loadCallback", "load_more_opt", "pagination", "loading_more", "default_values", "shouldLoadMore", "scrollHeight", "firstUrl", "canLoadMore", "setNextUrl", "next_url", "getUrl", "clearPagination", "first_option", "no_more_results"]
}
